{"version":3,"sources":["api/api.js","components/common/preloader/preloader.module.css","components/common/buttons/toggleBtn.module.scss","components/Content/Message/message.module.scss","components/Content/Profile/profile-posts/profile-posts.module.scss","components/Header/header.module.scss","Redux/people-reducer.js","tools/parse.js","Redux/profile-reducer.js","components/Content/Profile/profile-status/profile-status.jsx","tools/validators.js","components/common/formControl/formControl.jsx","components/common/formFields/renderFields.jsx","components/Content/Profile/profile-info/profile-info.jsx","components/Content/Profile/profile-posts/profile-posts.jsx","components/Content/Profile/profile.jsx","hoc/withAuthRedirect.jsx","components/Content/Profile/profile-container.jsx","components/Content/Friends/friends.jsx","components/Content/Friends/friends-container.jsx","Redux/message-reducer.js","components/Content/Message/message.jsx","components/Content/Message/message-container.jsx","components/Content/Group/group.jsx","components/Content/Group/group-container.jsx","Redux/auth-reducer.js","components/Content/Login/login.jsx","components/Content/content.jsx","components/Sidebar/sidebar.jsx","components/Sidebar/sidebar-container.jsx","Redux/app-reducer.js","assets/img/logo.jpg","components/common/dropdownMenu/dropdownMenu.jsx","components/common/buttons/toggleBtn.jsx","components/Header/header.jsx","components/Header/header-container.jsx","components/common/themes/themes.js","App.jsx","Redux/friends-reducer.js","Redux/group-reducer.js","Redux/sidebar-reducer.js","Redux/redux-store.js","index.js","components/Content/Profile/profile.module.scss","components/common/dropdownMenu/dropdownMenu.module.css","components/Content/Profile/profile-info/profile-info.module.scss","components/Content/Friends/friends.module.css","components/Content/Login/login.module.css","assets/img/preloader.svg","components/common/preloader/preloader.jsx","assets/img/user.png","components/Sidebar/sidebar.module.scss","components/common/formControl/formControl.module.css","components/common/formFields/renderFields.module.scss"],"names":["instance","axios","create","baseURL","withCredentials","headers","AuthAPI","checkAuth","get","login","email","password","remember","captcha","post","logout","delete","ProfileAPI","getProfile","userId","getStatus","updateStatus","status","put","uploadPhoto","photo","uploadData","FormData","append","setProfileInfo","profileInfo","UsersAPI","getUsers","currentPage","pageSize","setFollow","id","setUnfollow","SecurityAPI","getCaptchaUrl","module","exports","SET_USERS","TOGGLE_FOLLOW","SET_PAGE","FETCHING_TOGGLE","FOLLOWING_TOGGLE","SHOW_MORE_USERS","intinalState","currentPeople","totalUsersCount","isFetching","isFollowingProgress","toggleFollow","type","setPage","count","toggleFetching","toggleFollowingProgress","dispatch","a","response","users","data","items","totalCount","getMoreUsers","following","resultCode","unFollowing","peopleReducer","state","action","map","item","followed","filter","parseErrorsText","errors","errorsObj","i","length","fieldName","slice","indexOf","toLowerCase","fieldSubName","errorText","SET_PROFILE_ID","SET_USER","SET_STATUS","ADD_POST","SET_PHOTO","LIKE_TOGGLE","initialState","profileId","userData","fullName","aboutMe","photos","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","posts","text","likeCount","userLikesPostsId","setStatus","getUserId","profileData","profileReducer","newPostText","postId","includes","splice","push","ProfileStatus","useState","editMode","setEditMode","statusText","setStatusText","useEffect","toggleeEditMode","className","style","onBlur","autoFocus","onChange","event","currentTarget","value","name","title","delay","animation","onClick","required","maxLengthCreator","maxLength","FormControl","Type","input","meta","props","hasError","touched","error","formControl","undefined","TextArea","Input","maxLength20","renderFields","obj","typeField","fieldNamePrefix","Object","entries","key","valueField","Field","component","validate","ProfileInfo","isUserProfile","toggleEditMode","wrapper","editBtn","icon","faPenToSquare","size","list","ProfileInfoForm","reduxForm","form","initialValues","handleSubmit","onSubmit","faFloppyDisk","maxLength50","ProfilePostsReduxForm","likeToggle","userPosts","post_text","likes","cn","likeBtn","active","faHeart","likeIcon","like","addPost","placeholder","cols","rows","add","Profile","initialValuesForm","uploadProfilePhoto","changeProfileInfo","window","scrollTo","top","avatar","src","large","userAvatar","alt","e","target","files","info","bottom","formData","JSON","stringify","payload","reset","mapStateToPropsForRedirect","isLogin","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","mapDispatchToProps","messages","stopSubmit","compose","profilePage","peoplePage","math","params","Friends","FriendsItem","friends","FriendsContainer","friendsPage","ADD_MESSAGE","sender","messageReducer","newMessageText","maxLength100","NewMessageForm","newMessage_wrap","newTextField","addMessage","Message","dialogs","dialog","last","messagesList","message_in","message_out","message","content","message_wrap","messagePage","Group","GroupContainer","group","groupPage","SET_AUTH_USER_DATA","SET_PROFILE_AVATAR","SET_CAPTCHA_URL","captchaUrl","setAuthUserData","setProfileAvatar","setCaptchaUrl","then","small","getCaptcha","url","authReducer","LoginReduxForm","checkbox","htmlFor","submit","loginAuth","errorMessage","_error","PeopleContainer","lazy","Content","fallback","path","element","useMatch","Sidebar","navData","icons","faUser","faUserGroup","faMessage","faLayerGroup","faPeopleArrows","nav","menu","SidebarContainer","sidebar","SET_INITIALIZED_SUCCESS","TOGGLE_APP_THEME","initialized","theme","toogleAppTheme","appReducer","DropdownMenu","timer","linkTitle","children","menuShow","setMenuShow","Children","child","cloneElement","show","onMouseEnter","clearTimeout","onMouseLeave","setTimeout","faChevronDown","chevron","body","ToggleBtn","initial","defaultChecked","Header","profileAvatar","logoutAuth","currentTheme","setCurrentTheme","localStorage","setItem","logo","subtitle","profile","themeToggle","faSun","faMoon","HeaderContainer","app","darkTheme","textColor","titleBeforeColor","messageText","lightTheme","GlobalStyles","createGlobalStyle","initializedApp","authPromise","Promise","all","getItem","initialSate","friendsReducer","groupReducer","sideBarReducer","reducers","combineReducers","FormReducere","store","applyMiddleware","thunkMiddleware","createStore","forReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","Preloader","preloader"],"mappings":"qHAAA,qJAEMA,EAFN,OAEiBC,EAAMC,OAAO,CAC5BC,QAAS,gDACTC,iBAAiB,EACjBC,QAAS,CACP,UAAW,0CAIFC,EAAU,CACrBC,UADqB,WAEnB,OAAOP,EAASQ,IAAI,YAEtBC,MAJqB,SAIfC,EAAOC,EAAUC,GAA2B,IAAjBC,IAAgB,yDAC/C,OAAOb,EAASc,KAAK,aAAc,CAAEJ,QAAOC,WAAUC,WAAUC,aAElEE,OAPqB,WAQnB,OAAOf,EAASgB,OAAO,gBAIdC,EAAa,CACxBC,WADwB,SACbC,GACT,OAAOnB,EAASQ,IAAT,kBAAwBW,KAEjCC,UAJwB,SAIdD,GACR,OAAOnB,EAASQ,IAAT,yBAA+BW,KAExCE,aAPwB,SAOXC,GACX,OAAOtB,EAASuB,IAAT,iBAA+B,CAAED,OAAQA,KAElDE,YAVwB,SAUZC,GACV,IAAIC,EAAa,IAAIC,SAErB,OADAD,EAAWE,OAAO,QAASH,GACpBzB,EAASuB,IAAT,gBAA8BG,IAEvCG,eAfwB,SAeTC,GACb,OAAO9B,EAASuB,IAAT,WAAyBO,KAIvBC,EAAW,CACtBC,SADsB,WACoB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACnC,OAAOlC,EAASQ,IAAT,qBAA2ByB,EAA3B,kBAAgDC,KAEzDC,UAJsB,SAIZC,GACR,OAAOpC,EAASc,KAAT,iBAAwBsB,KAEjCC,YAPsB,SAOVD,GACV,OAAOpC,EAASgB,OAAT,iBAA0BoB,MAIxBE,EAAc,CACzBC,cADyB,WAEvB,OAAOvC,EAASQ,IAAT,+B,oBCvDXgC,EAAOC,QAAU,CAAC,UAAY,+B,oBCA9BD,EAAOC,QAAU,CAAC,QAAU,6B,+DCA5BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,QAAU,yBAAyB,aAAe,8BAA8B,gBAAkB,iCAAiC,aAAe,8BAA8B,WAAa,4BAA4B,WAAa,4BAA4B,YAAc,+B,mBCA1aD,EAAOC,QAAU,CAAC,QAAU,+BAA+B,IAAM,2BAA2B,QAAU,+BAA+B,KAAO,4BAA4B,UAAY,iCAAiC,MAAQ,6BAA6B,KAAO,4BAA4B,SAAW,gCAAgC,QAAU,+BAA+B,OAAS,gC,mBCA1XD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,KAAO,qBAAqB,KAAO,qBAAqB,MAAQ,sBAAsB,SAAW,yBAAyB,KAAO,qBAAqB,QAAU,wBAAwB,OAAS,uBAAuB,UAAY,0BAA0B,UAAY,0BAA0B,YAAc,8B,+RCChWC,EAAY,YACZC,EAAgB,gBAChBC,EAAW,WACXC,EAAkB,kBAClBC,EAAmB,mBACnBC,EAAkB,kBAEpBC,EAAe,CACjBC,cAAe,GACff,SAAU,GACVgB,gBAAiB,EACjBjB,YAAa,EACbkB,YAAY,EACZC,oBAAqB,IAkDVC,EAAe,SAAClC,GAC3B,MAAO,CAAEmC,KAAMX,EAAexB,WAGnBoC,EAAU,SAACC,GACtB,MAAO,CAAEF,KAAMV,EAAUX,YAAauB,IAG3BC,EAAiB,SAACN,GAC7B,MAAO,CAAEG,KAAMT,EAAiBM,eAGrBO,EAA0B,SAACN,EAAqBjC,GAC3D,MAAO,CAAEmC,KAAMR,EAAkBM,sBAAqBjC,WAG3Ca,EAAW,SAACC,EAAaC,GACpC,8CAAO,WAAOyB,GAAP,eAAAC,EAAA,6DACLD,EAASF,GAAe,IADnB,SAEgB1B,IAASC,SAASC,EAAaC,GAF/C,OAED2B,EAFC,OAGLF,GA5BqBG,EA4BHD,EAASE,KAAKC,MA5BJd,EA4BWW,EAASE,KAAKE,WA3BhD,CAAEX,KAAMZ,EAAWoB,QAAOZ,qBA4B/BS,EAASF,GAAe,IAJnB,iCAzBe,IAACK,EAAOZ,IAyBvB,OAAP,uDAQWgB,EAAe,SAACjC,EAAaC,GACxC,8CAAO,WAAOyB,GAAP,eAAAC,EAAA,6DACLD,EAASF,GAAe,IADnB,SAEgB1B,IAASC,SAASC,EAAaC,GAF/C,OAED2B,EAFC,OAGLF,GAjCyBG,EAiCHD,EAASE,KAAKC,MAjCJd,EAiCWW,EAASE,KAAKE,WAhCpD,CAAEX,KAAMP,EAAiBe,QAAOZ,qBAiCrCS,EAASF,GAAe,IAJnB,iCA9BmB,IAACK,EAAOZ,IA8B3B,OAAP,uDAQWiB,EAAY,SAAC/B,GACxB,8CAAO,WAAOuB,GAAP,SAAAC,EAAA,6DACLD,EAASD,GAAwB,EAAMtB,IADlC,SAEgBL,IAASI,UAAUC,GAFnC,OAG4B,IAH5B,OAGQ2B,KAAKK,YAChBT,EAASN,EAAajB,IAExBuB,EAASD,GAAwB,EAAOtB,IANnC,2CAAP,uDAUWiC,EAAc,SAACjC,GAC1B,8CAAO,WAAOuB,GAAP,SAAAC,EAAA,6DACLD,EAASD,GAAwB,EAAMtB,IADlC,SAEgBL,IAASM,YAAYD,GAFrC,OAG4B,IAH5B,OAGQ2B,KAAKK,YAChBT,EAASN,EAAajB,IAExBuB,EAASD,GAAwB,EAAOtB,IANnC,2CAAP,uDAUakC,IAvGK,WAAmC,IAAlCC,EAAiC,uDAAzBvB,EAAcwB,EAAW,uCACpD,OAAQA,EAAOlB,MACb,KAAKZ,EACH,OAAO,2BACF6B,GADL,IAEEtB,cAAc,YAAKuB,EAAOV,OAC1BZ,gBAAiBsB,EAAOtB,kBAE5B,KAAKH,EACH,OAAO,2BACFwB,GADL,IAEEtB,cAAc,GAAD,mBAAMsB,EAAMtB,eAAZ,YAA8BuB,EAAOV,QAClDZ,gBAAiBsB,EAAOtB,kBAE5B,KAAKL,EACH,OAAO,2BAAK0B,GAAZ,IAAmBpB,WAAYqB,EAAOrB,aACxC,KAAKR,EACH,OAAO,2BACF4B,GADL,IAEEtB,cAAesB,EAAMtB,cAAcwB,KAAI,SAACC,GACtC,OAAIA,EAAKtC,KAAOoC,EAAOrD,OACd,2BAAKuD,GAAZ,IAAkBC,UAAWD,EAAKC,WACxBD,OAGlB,KAAK5B,EACH,OAAO,2BACFyB,GADL,IAEEnB,oBAAqBoB,EAAOpB,oBAAP,sBACbmB,EAAMnB,qBADO,CACcoB,EAAOrD,SACtCoD,EAAMnB,oBAAoBwB,QAAO,SAACxC,GAAD,OAAQA,IAAOoC,EAAOrD,YAE/D,KAAKyB,EACH,OAAO,2BAAK2B,GAAZ,IAAmBtC,YAAauC,EAAOvC,cACzC,QACE,OAAOsC,K,mMCrDAM,EAAkB,SAACC,GAE9B,IADA,IAAIC,EAAY,GACPC,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IAAK,CACtC,IAAIE,EAAYJ,EAAOE,GACpBG,MACCL,EAAOE,GAAGI,QAAQ,KAAO,EACzBN,EAAOE,GAAGI,QAAQ,MAEnBC,cACCC,EAAeR,EAAOE,GACvBG,MAAML,EAAOE,GAAGI,QAAQ,KAAO,EAAGN,EAAOE,GAAGI,QAAQ,MACpDC,cACCE,EAAYT,EAAOE,GAAGG,MAAM,EAAGL,EAAOE,GAAGI,QAAQ,KAAO,GAC5DL,EAAUG,GAAV,2BACKH,EAAUG,IADf,kBAEGI,EAAeC,IAGpB,OAAOR,G,QCbHS,EAAiB,iBACjBC,EAAW,WACXC,EAAa,aACbC,EAAW,WACXC,EAAY,YACZC,EAAc,cAEhBC,EAAe,CACjBC,UAAW,GACXzE,OAAQ,GACR0E,SAAU,CACR7E,OAAQ,GACR8E,SAAU,GACVC,QAAS,GACTC,OAAQ,GACRC,SAAU,CACRC,SAAU,KACVC,QAAS,KACTC,GAAI,KACJC,QAAS,KACTC,UAAW,KACXC,QAAS,KACTC,OAAQ,KACRC,SAAU,OAGdC,MAAO,CACL,CACEzE,GAAI,EACJ0E,KAAM,QACNC,UAAW,IAEb,CACE3E,GAAI,EACJ0E,KAAM,qBACNC,UAAW,IAEb,CACE3E,GAAI,EACJ0E,KAAM,2BACNC,UAAW,GAEb,CACE3E,GAAI,EACJ0E,KAAM,2CACNC,UAAW,IAGfC,iBAAkB,IA8DPC,EAAY,SAAC3F,GACxB,MAAO,CAAEgC,KAAMoC,EAAYpE,WAehB4F,EAAY,SAAC/F,GACxB,8CAAO,WAAOwC,GAAP,eAAAC,EAAA,6DACLD,EAASF,aAAe,IADnB,SAEgBxC,IAAWC,WAAWC,GAFtC,OAED0C,EAFC,OAGLF,GAxBoBwD,EAwBHtD,EAASE,KAvBrB,CAAET,KAAMmC,EAAU0B,iBAwBvBxD,EAASF,aAAe,IAJnB,iCArBc,IAAC0D,IAqBf,OAAP,uDA8CaC,EA1HQ,WAAmC,IAAlC7C,EAAiC,uDAAzBuB,EAActB,EAAW,uCACvD,OAAQA,EAAOlB,MACb,KAAKkC,EACH,OAAO,2BAAKjB,GAAZ,IAAmBwB,UAAWvB,EAAOuB,YACvC,KAAKN,EACH,OAAO,2BAAKlB,GAAZ,IAAmByB,SAAUxB,EAAO2C,cACtC,KAAKzB,EACH,OAAO,2BAAKnB,GAAZ,IAAmBjD,OAAQkD,EAAOlD,SACpC,KAAKqE,EACH,OAAInB,EAAO6C,YACF,2BACF9C,GADL,IAEEsC,MAAM,GAAD,mBACAtC,EAAMsC,OADN,CAEH,CACEzE,GAAImC,EAAMsC,MAAM5B,OAAS,EACzB6B,KAAMtC,EAAO6C,YACbN,UAAW,OAILxC,EAChB,KAAKsB,EACH,OAAO,2BACFtB,GADL,IAEEsC,MAAOtC,EAAMsC,MAAMpC,KAAI,SAACC,GAatB,OAZIA,EAAKtC,KAAOoC,EAAO8C,SACjB/C,EAAMyC,iBAAiBO,SAAS/C,EAAO8C,SACzC5C,EAAKqC,WAAa,EAClBxC,EAAMyC,iBAAiBQ,OACrBjD,EAAMyC,iBAAiB5B,QAAQZ,EAAO8C,QACtC,KAGF5C,EAAKqC,WAAa,EAClBxC,EAAMyC,iBAAiBS,KAAKjD,EAAO8C,UAGhC5C,OAGb,KAAKkB,EACH,OAAO,2BACFrB,GADL,IAEEyB,SAAS,2BAAMzB,EAAMyB,UAAb,IAAuBG,OAAQ3B,EAAO2B,WAElD,QACE,OAAO5B,I,iEC7DEmD,EApCO,SAAC,GAA8B,IAA5BpG,EAA2B,EAA3BA,OAAQD,EAAmB,EAAnBA,aAE7B,EAA8BsG,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAAkCF,mBAASrG,GAA3C,mBAAKwG,EAAL,KAAiBC,EAAjB,KAEAC,qBAAU,WACND,EAAczG,KACf,CAACA,IAEJ,IAAM2G,EAAkB,WACpBJ,GAAaD,GACTtG,IAAWwG,GAAYzG,EAAayG,IAO5C,OACI,qBAAKI,UAAWC,IAAM7G,OAAtB,SACKsG,EACK,uBAAOQ,OAAQH,EACbI,WAAW,EACXC,SATS,SAACC,GACtBR,EAAcQ,EAAMC,cAAcC,QAStBA,MAAOX,EACPxE,KAAK,OAAOoF,KAAK,SAAStG,GAAG,kBAC/B,cAAC,UAAD,CAASuG,MAAM,0BAA0BC,MAAM,MAAMC,UAAU,OAA/D,SACE,mBAAGC,QAASb,EAAZ,SACK3G,GAAkB,+C,mDClC9ByH,EAAW,SAACN,GACvB,OAAKA,OACA,EADc,qBAIRO,EAAmB,SAACC,GAC/B,OAAO,SAACR,GACN,OAAIA,GAASA,EAAMxD,OAASgE,EACpB,iBAAN,OAAwBA,EAAxB,iBACG,I,6CCNHC,EAAc,SAACC,GACjB,OAAO,YAAgC,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,iBAC5BC,EAAWF,EAAKG,SAAWH,EAAKI,MAEtC,OACI,sBAAKvB,UAAWC,IAAMuB,YAAc,KAAOH,EAAWpB,IAAMsB,WAAQE,GAApE,UACKJ,EAAW,4BAAIF,EAAKI,aAAaE,EAClC,cAACR,EAAD,2BAAUC,GAAWE,SAMxBM,EAAYV,EAAY,YACxBW,EAASX,EAAY,S,kBCX5BY,GAAcd,EAAiB,IAsCtBe,GApCM,SAACC,EAAKC,GAAuC,IAA5BC,EAA2B,uDAAT,KACpD,OAAQD,GACJ,IAAK,OACD,OAAOE,OAAOC,QAAQJ,GAAKvF,KAAI,YAAmB,IAAD,mBAAhB4F,EAAgB,KAAX5B,EAAW,KAC7C,GAAqB,kBAAVA,GAAgC,KAAVA,EAAc,CAC3C,IAAI6B,EAAa7B,EAIjB,MAH0B,mBAAf6B,IACPA,GAA4B,IAAfA,EAAsB,MAAQ,MAExC,qBAAcpC,UAAWC,KAAMzD,KAA/B,UACH,8BAAI2F,EAAJ,OACA,+BAAOC,MAFKD,GAKf,OAAO,QAGpB,IAAK,QACD,OAAOF,OAAOC,QAAQJ,GAAKvF,KAAI,YAAmB,IAAD,mBAAhB4F,EAAgB,KAAX5B,EAAW,KAC7C,MAAqB,kBAAVA,EAA+B,OAAVA,EACrB,qBAAcP,UAAWC,KAAMzD,KAA/B,UAAqC,8BAAI2F,EAAJ,OACxC,cAACE,EAAA,EAAD,CACIC,UAAWX,EACXvG,KAAuB,mBAAVmF,EAAsB,WAAa,OAChDC,KAAMwB,EAAkBA,EAAkB,IAAMG,EAAMA,EACtD5B,MAAOA,EACPgC,SAAUX,OANFO,GASN,QAGtB,QAAS,OAAO,OCjCXK,GAAc,SAAC,GAAiD,IAA/C1E,EAA8C,EAA9CA,SAAU2E,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eAEnD,OACI,sBAAK1C,UAAWC,IAAM0C,QAAtB,UACI,sBAAK3C,UAAU,aAAf,UACI,wCACCyC,GACG,yBAAQzC,UAAWC,IAAM2C,QAAShC,QAAS8B,EAA3C,UACI,wCACA,cAAC,IAAD,CAAiBG,KAAMC,IAAeC,KAAM,aAIxD,oBAAI/C,UAAWC,IAAM+C,KAArB,SACKnB,GAAa/D,EAAU,UAE5B,qBAAKkC,UAAU,aAAf,SACI,8CAEJ,oBAAIA,UAAWC,IAAM+C,KAArB,SACKnB,GAAa/D,EAASI,SAAU,OAAQ,kBA+B5C+E,GAAkBC,YAAU,CAAEC,KAAM,mBAAlBD,EAzBP,SAAC,GAA4C,IAA1CE,EAAyC,EAAzCA,cAAeC,EAA0B,EAA1BA,aAA0B,EAAZ9B,MAEpD,OACI,qBAAKvB,UAAWC,IAAM0C,QAAtB,SACI,uBAAMW,SAAUD,EAAhB,UACI,sBAAKrD,UAAU,aAAf,UACI,wCACA,yBAAQA,UAAWC,IAAM2C,QAAzB,UACI,wCACA,cAAC,IAAD,CAAiBC,KAAMU,IAAcR,KAAM,aAInD,qBAAI/C,UAAWC,IAAM+C,KAArB,UACKnB,GAAauB,EAAe,SAC7B,qBAAKpD,UAAU,aAAf,SACI,8CAEH6B,GAAauB,EAAclF,SAAU,QAAS,uB,wCC1C7DsF,GAAc1C,EAAiB,IA0CtB2C,GADeP,YAAU,CAAEC,KAAM,eAAlBD,EAvCT,SAAC,GAA0E,IAAxEvE,EAAuE,EAAvEA,MAAO0E,EAAgE,EAAhEA,aAAcZ,EAAkD,EAAlDA,cAAe3D,EAAmC,EAAnCA,iBAAkB4E,EAAiB,EAAjBA,WAEtEC,EAAYhF,EAAMpC,KAAK,SAACC,GACxB,OACI,sBAAmBwD,UAAWC,KAAMrH,KAApC,UACI,mBAAGoH,UAAWC,KAAM2D,UAApB,SAAgCpH,EAAKoC,OACrC,qBAAKoB,UAAWC,KAAM4D,MAAtB,SACI,yBAAQ7D,UAAW8D,KAAG7D,KAAM8D,QAAP,eAAmB9D,KAAM+D,OAASlF,EAAiBO,SAAS7C,EAAKtC,MAAQ0G,QAAS,kBAAM8C,EAAWlH,EAAKtC,KAA7H,UACI,cAAC,IAAD,CAAiB2I,KAAMoB,IAASlB,KAAM,KAAM/C,UAAWC,KAAMiE,WAC7D,sBAAMlE,UAAWC,KAAMkE,KAAvB,SAA8B3H,EAAKqC,mBALrCrC,EAAKtC,OAYvB,OACI,sBAAK8F,UAAWC,KAAMtB,MAAtB,UACK8D,GACG,uBAAMa,SAAUD,EAAcrD,UAAWC,KAAMmE,QAA/C,UACI,cAAC/B,EAAA,EAAD,CACIC,UAAWZ,EACXlB,KAAK,cACLtG,GAAG,cACHmK,YAAY,2BACZC,KAAK,MACLC,KAAK,IACLhC,SAAU,CAAC1B,EAAU2C,MAEzB,wBAAQxD,UAAWC,KAAMuE,IAAzB,yBAGR,qBAAKxE,UAAWC,KAAM0C,QAAtB,SACKgB,UC0CFc,GA5EC,SAAC,GAAwI,IAGjJC,EAHW5G,EAAqI,EAArIA,SAAUD,EAA2H,EAA3HA,UAAWzE,EAAgH,EAAhHA,OAAQD,EAAwG,EAAxGA,aAAcwF,EAA0F,EAA1FA,MAAOyF,EAAmF,EAAnFA,QAASO,EAA0E,EAA1EA,mBAAoBC,EAAsD,EAAtDA,kBAAmB9F,EAAmC,EAAnCA,iBAAkB4E,EAAiB,EAAjBA,WAE/HjB,EAAgB3E,EAAS7E,SAAW4E,EAEpC4E,WACAiC,EAAiB,2BAAQ5G,GAAR,IAAkBI,SAAS,eAAMJ,EAASI,aAClCjF,cAClByL,EAAkBzG,QAG7B,MAA8BwB,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACM+C,EAAiB,kBAAM/C,GAAaD,IAE1CI,qBAAU,WACN+E,OAAOC,SAAS,EAAG,KACpB,IAsBH,OACI,sBAAK9E,UAAU,UAAf,UACI,sBAAKA,UAAWC,IAAM8E,IAAtB,UACI,sBAAK/E,UAAWC,IAAM+E,OAAtB,UACI,qBAAKC,IAAKnH,EAASG,OAAOiH,MAAQpH,EAASG,OAAOiH,MAAQC,IAAYC,IAAI,SAASpF,UAAU,QAE5FyC,GACG,cAAC,UAAD,CAAShC,MAAM,yBAAyBC,MAAM,MAAMC,UAAU,OAA9D,SACI,uBAAOX,UAAWC,IAAM3G,YAAxB,SACI,uBAAO8B,KAAK,OAAOoF,KAAK,eAAeJ,SAxB3C,SAACiF,GACjBA,EAAEC,OAAOC,MAAMxI,QACf4H,EAAmBU,EAAEC,OAAOC,MAAM,cA4B9B,sBAAKvF,UAAWC,IAAMuF,KAAtB,UACI,mBAAGxF,UAAWC,IAAMO,KAApB,SAA2B1C,EAASC,WAEnC0E,EACK,cAAC,EAAD,CAAerJ,OAAQA,EAAQD,aAAcA,IAC7C,4BAAIC,UAKlB,qBAAK4G,UAAWC,IAAMwF,OAAtB,SAEK/F,EACK,cAACuD,GAAD,CAAiBG,cAAesB,EAAmBhC,eAAgBA,EAAgBY,SArC9E,SAACoC,GACpB,GAAIC,KAAKC,UAAUF,KAAcC,KAAKC,UAAUlB,GAAoB,CAChE,IAAImB,EAAO,aAAK5M,OAAQ6E,EAAS7E,QAAWyM,GAC5Cd,EAAkBiB,QAGfnD,OAgCO,cAAC,GAAD,CAAa5E,SAAUA,EAAU4E,eAAgBA,EAAgBD,cAAeA,MAI1F,cAAC,GAAD,CAAuB9D,MAAOA,EAAO2E,SArDvB,SAACoC,EAAUjK,GAC7B2I,EAAQsB,EAASvG,aACjB1D,EAASqK,YAAM,iBAoDPrD,cAAeA,EAAe3D,iBAAkBA,EAAkB4E,WAAYA,Q,iDC7E1FqC,GAA6B,SAAC1J,GAAD,MAAY,CACzC2J,QAAS3J,EAAM4J,KAAKD,UAGXE,GAAmB,SAACC,GAAe,IACtCC,EADqC,gKAEvC,WACI,OAAKC,KAAKjF,MAAM4E,QACT,cAACG,EAAD,eAAeE,KAAKjF,QADK,cAAC,IAAD,CAAUkF,GAAG,eAHV,GACXC,IAAMJ,WAStC,OAFuCK,YAAQT,GAARS,CAAoCJ,I,SCoB3EK,GAAqB,CACrBzH,YAAW9F,UTuGU,SAACD,GACxB,8CAAO,WAAOwC,GAAP,eAAAC,EAAA,sEACgB3C,IAAWG,UAAUD,GADrC,OACD0C,EADC,OAELF,EAASsD,EAAUpD,EAASE,OAFvB,2CAAP,uDSxGwB1C,aT8GE,SAACC,GAC3B,8CAAO,WAAOqC,GAAP,SAAAC,EAAA,sEACgB3C,IAAWI,aAAaC,GADxC,OAE4B,IAF5B,OAEQyC,KAAKK,YAChBT,EAASsD,EAAU3F,IAHhB,2CAAP,uDS/GsCgL,QTkFjB,SAACjF,GACtB,MAAO,CAAE/D,KAAMqC,EAAU0B,gBSnFsBwF,mBTuHf,SAACpL,GACjC,8CAAO,WAAOkC,GAAP,eAAAC,EAAA,sEACgB3C,IAAWO,YAAYC,GADvC,OAE4B,KAD7BoC,EADC,QAEQE,KAAKK,YAChBT,GArCqCwC,EAqCDtC,EAASE,KAAKA,KAAKoC,OApCpD,CAAE7C,KAAMsC,EAAWO,YAiCnB,iCAlCiC,IAACA,IAkClC,OAAP,uDSxHmE2G,kBTgIpC,SAAChL,GAChC,8CAAO,WAAO6B,GAAP,iBAAAC,EAAA,sEACgB3C,IAAWY,eAAeC,GAD1C,OAE4B,KAD7B+B,EADC,QAEQE,KAAKK,WAChBT,EAASuD,EAAUpF,EAAYX,UAE3B2D,EAASD,EAAgBhB,EAASE,KAAK6K,UAC3CjL,EAASkL,YAAW,kBAAmB/J,KANpC,2CAAP,uDSjIsF8G,WT0F9D,SAACtE,GACzB,MAAO,CAAEhE,KAAMuC,EAAayB,YSxFfwH,gBAAQJ,aAfD,SAACnK,GACnB,MAAO,CACHwB,UAAWxB,EAAMwK,YAAYhJ,UAC7BC,SAAUzB,EAAMwK,YAAY/I,SAC5B1E,OAAQiD,EAAMwK,YAAYzN,OAC1BuF,MAAOtC,EAAMwK,YAAYlI,MACzBG,iBAAkBzC,EAAMwK,YAAY/H,iBACpC7D,WAAYoB,EAAMyK,WAAW7L,cAQWwL,IAAqBP,GAAtDU,EA/BU,SAACxF,GAEtB,IAAM2F,EAA0C3F,EAA1C2F,KAAMlJ,EAAoCuD,EAApCvD,UAAWmB,EAAyBoC,EAAzBpC,UAAW9F,EAAckI,EAAdlI,UAQlC,OANA4G,qBAAU,WACN,IAAI5F,EAAK6M,EAAOA,EAAKC,OAAO/N,OAAS4E,EACrCmB,EAAU9E,GACVhB,EAAUgB,KACX,CAAC6M,EAAMlJ,EAAWmB,EAAW9F,IAG5BkI,EAAMnG,WAAa,cAAC,KAAD,IAAgB,cAAC,GAAD,eAAamG,O,oBCQzC6F,GAzBC,SAAC7F,GACb,IAAI8F,EAAc9F,EAAM+F,QAAQ5K,KAAI,SAACC,GACjC,OACI,qBAAkBwD,UAAWC,KAAMzD,KAAnC,UACI,qBAAKwD,UAAWC,KAAM+E,OAAtB,SACI,qBAAKC,IAAKzI,EAAKwI,OAAQI,IAAI,SAASpF,UAAU,UAElD,sBAAKA,UAAWC,KAAMuF,KAAtB,UACI,mBAAGxF,UAAWC,KAAMO,KAApB,SAA2BhE,EAAKgE,OAChC,mBAAGR,UAAWC,KAAM7G,OAApB,SAA6BoD,EAAKpD,cANjCoD,EAAKtC,OAatB,OACI,qBAAK8F,UAAU,UAAf,SACI,oBAAIA,UAAWC,KAAM+C,KAArB,SACKkE,OCNFE,GAFUZ,aAXH,SAACnK,GACnB,MAAO,CACH8K,QAAS9K,EAAMgL,YAAYF,YAIV,SAAC1L,GACtB,MAAO,KAIc+K,CAA6CS,ICdhEK,GAAc,cAEhB1J,GAAe,CACjB8I,SAAU,CACR,CACExM,GAAI,EACJqN,OAAQ,KACR3I,KAAM,cAER,CACE1E,GAAI,EACJqN,OAAQ,MACR3I,KAAM,OAER,CACE1E,GAAI,EACJqN,OAAQ,KACR3I,KAAM,sBAER,CACE1E,GAAI,EACJqN,OAAQ,MACR3I,KAAM,8BAER,CACE1E,GAAI,EACJqN,OAAQ,MACR3I,KAAM,sBA8BG4I,GAzBQ,WAAmC,IAAlCnL,EAAiC,uDAAzBuB,GAActB,EAAW,uCACvD,OAAQA,EAAOlB,OACRkM,IACChL,EAAOmL,eACF,2BACFpL,GADL,IAEEqK,SAAS,GAAD,mBACHrK,EAAMqK,UADH,CAEN,CACExM,GAAImC,EAAMqK,SAAS3J,OAAS,EAC5BwK,OAAQ,MACR3I,KAAMtC,EAAOmL,oBAMdpL,G,oBC3CPqL,GAAe5G,EAAiB,KAmEhC6G,GAAiBzE,YAAU,CAAEC,KAAM,cAAlBD,EAhBJ,SAAC,GAAsB,IAApBG,EAAmB,EAAnBA,aAClB,OACI,uBAAMC,SAAUD,EAAcrD,UAAWC,KAAM2H,gBAA/C,UACI,cAACvF,EAAA,EAAD,CACIC,UAAWZ,EACX1B,UAAWC,KAAM4H,aACjBxD,YAAY,wBACZ7D,KAAK,iBACL+D,KAAK,IACLhC,SAAU,CAAC1B,EAAU6G,MAEzB,wBAAQ1H,UAAWC,KAAM6H,WAAzB,wBAOGC,GAnEC,SAAC,GAAuC,IAArCZ,EAAoC,EAApCA,QAAST,EAA2B,EAA3BA,SAAUoB,EAAiB,EAAjBA,WAC9BE,EAAUb,EAAQ5K,KAAI,SAAAC,GACtB,OACI,sBAAmBwD,UAAWC,KAAMgI,OAApC,UACI,qBAAKjI,UAAWC,KAAM+E,OAAtB,SAA8B,qBAAKC,IAAKzI,EAAKwI,OAAQI,IAAI,SAASpF,UAAU,UAC5E,sBAAKA,UAAWC,KAAMuF,KAAtB,UACI,mBAAGxF,UAAWC,KAAMO,KAApB,SAA2BhE,EAAKgE,OAChC,mBAAGR,UAAWC,KAAMiI,YAJlB1L,EAAKtC,OAUnBiO,EAAezB,EAASnK,KAAI,SAAAC,GAC5B,MAAoB,OAAhBA,EAAK+K,OAED,qBAAmBvH,UAAWC,KAAMmI,WAApC,SACI,mBAAGpI,UAAU,eAAb,SAA6BxD,EAAKoC,QAD5BpC,EAAKtC,IAII,QAAhBsC,EAAK+K,OAER,qBAAmBvH,UAAWC,KAAMoI,YAApC,SACI,mBAAGrI,UAAU,eAAb,SAA6BxD,EAAKoC,QAD5BpC,EAAKtC,SAIhB,KAQX,OACI,sBAAK8F,UAAWC,KAAMqI,QAAtB,UACI,qBAAKtI,UAAWC,KAAM+H,QAAtB,SACKA,IAEL,sBAAKhI,UAAWC,KAAMsI,QAAtB,UACI,qBAAKvI,UAAWC,KAAMuI,aAAtB,SACKL,IAEL,cAACR,GAAD,CAAgBrE,SAdH,SAACoC,EAAUjK,GAChCqM,EAAWpC,EAAS+B,gBACpBhM,EAASqK,YAAM,yBC1BRc,gBACXJ,aARkB,SAACnK,GACnB,MAAO,CACH8K,QAAS9K,EAAMgL,YAAYF,QAC3BT,SAAUrK,EAAMoM,YAAY/B,YAKP,CAAEoB,WFuCL,SAACL,GACzB,MAAO,CAAErM,KAAMkM,GAAaG,eAAgBA,MEvC1CvB,GAFWU,CAGbmB,ICPaW,I,OAND,SAACtH,GACX,OACI,0CCWOuH,GAFQnC,aAXD,SAACnK,GACnB,MAAO,CACHuM,MAAOvM,EAAMwM,cAII,SAACpN,GACtB,MAAO,KAIY+K,CAA6CkC,ICR9DI,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAEpBpL,GAAe,CACjB3E,OAAQ,KACRV,MAAO,KACPC,MAAO,KAEPwM,OAAQ,KACRgB,SAAS,EACT/K,YAAY,EACZtC,QAAS,KACTsQ,WAAY,MAgBDC,GAAkB,SAACjQ,GAA0C,IAAlCV,EAAiC,uDAAzB,KAAMC,EAAmB,uCAAZwN,EAAY,uCACvE,MAAO,CAAE5K,KAAM0N,GAAoBjN,KAAM,CAAE5C,SAAQV,QAAOC,QAAOwN,aAGtDmD,GAAmB,SAACnE,GAC/B,MAAO,CAAE5J,KAAM2N,GAAoB/D,WAGxBoE,GAAgB,SAACH,GAC5B,MAAO,CAAE7N,KAAM4N,GAAiBC,eAkCrB5Q,GAAY,WACvB,8CAAO,WAAOoD,GAAP,uBAAAC,EAAA,6DACLD,EAASF,aAAe,IADnB,SAEgBnD,IAAQC,YAFxB,OAG4B,KAD7BsD,EAFC,QAGQE,KAAKK,aAAmB,EACRP,EAASE,KAAKA,KAAnC3B,EAD4B,EAC5BA,GAAI3B,EADwB,EACxBA,MAAOC,EADiB,EACjBA,MACjBiD,EjBwBG,CAAEL,KAAMkC,EAAgBO,UiBxBL3D,IACtBuB,EAASyN,GAAgBhP,EAAI3B,EAAOC,GAAO,IAC3CO,IAAWC,WAAWkB,GAAImP,MAAK,SAAC1N,GAC9BF,EAAS0N,GAAiBxN,EAASE,KAAKoC,OAAOqL,YAGnD7N,EAASF,aAAe,IAXnB,2CAAP,uDAeWgO,GAAa,WACxB,8CAAO,WAAO9N,GAAP,iBAAAC,EAAA,sEACgBtB,IAAYC,gBAD5B,OACDsB,EADC,OAECsN,EAAatN,EAASE,KAAK2N,IACjC/N,EAAS2N,GAAcH,IAHlB,2CAAP,uDAOaQ,GAhFG,WAAmC,IAAlCpN,EAAiC,uDAAzBuB,GAActB,EAAW,uCAClD,OAAQA,EAAOlB,MACb,KAAK0N,GACH,OAAO,uCAAKzM,GAAUC,EAAOT,MAA7B,IAAmClD,QAAS,KAAMsQ,WAAY,OAChE,KAAKF,GACH,OAAO,2BAAK1M,GAAZ,IAAmB2I,OAAQ1I,EAAO0I,SACpC,KAAKgE,GACH,OAAO,2BAAK3M,GAAZ,IAAmB4M,WAAY3M,EAAO2M,aACxC,QACE,OAAO5M,I,oBCwCPqN,GAAiBxG,YAAU,CAAEC,KAAM,SAAlBD,EA9CL,SAAC,GAAyC,IAAvCG,EAAsC,EAAtCA,aAAc4F,EAAwB,EAAxBA,WAAY1H,EAAY,EAAZA,MAC3C,OACI,uBAAM+B,SAAUD,EAAcrD,UAAWC,KAAMkD,KAA/C,UACI,cAACd,EAAA,EAAD,CACIC,UAAWX,EACX3B,UAAWC,KAAMiB,MACjB9F,KAAK,QACLoF,KAAK,QACL6D,YAAY,aACZ9B,SAAU,CAAC1B,KAEf,cAACwB,EAAA,EAAD,CACIC,UAAWX,EACX3B,UAAWC,KAAMiB,MACjB9F,KAAK,WACLoF,KAAK,WACL6D,YAAY,gBACZ9B,SAAU,CAAC1B,KAEf,wBAAOb,UAAWC,KAAM0J,SAAUC,QAAQ,WAA1C,UACI,cAACvH,EAAA,EAAD,CACIC,UAAWX,EACXvG,KAAK,WACLoF,KAAK,WACLtG,GAAG,aALX,iBASCqH,GAAS,mBAAGvB,UAAU,mBAAb,SAAiCuB,IAC1C0H,GAAc,gCACX,+DACA,qBAAKhE,IAAKgE,EAAY7D,IAAI,YAC1B,cAAC/C,EAAA,EAAD,CACIC,UAAWX,EACX3B,UAAWC,KAAMiB,MACjB9F,KAAK,OACLoF,KAAK,UACLtG,GAAG,UACHqI,SAAU,CAAC1B,QAGnB,wBAAQb,UAAWC,KAAM4J,OAAzB,yBAcGrD,gBAPS,SAACnK,GACrB,MAAO,CACH2J,QAAS3J,EAAM4J,KAAKD,QACpBiD,WAAY5M,EAAM4J,KAAKgD,cAIS,CAAEa,UDjCjB,SAACtR,EAAOC,EAAUC,EAAUC,GACnD,8CAAO,WAAO8C,GAAP,iBAAAC,EAAA,6DACLD,EAASF,aAAe,IADnB,SAEgBnD,IAAQG,MAAMC,EAAOC,EAAUC,EAAUC,GAFzD,OAG4B,KAD7BgD,EAFC,QAGQE,KAAKK,WAChBT,EAASpD,OAEwB,KAA7BsD,EAASE,KAAKK,YAChBT,EAAS8N,MAEPQ,EACFpO,EAASE,KAAK6K,SAAS3J,OAAS,EAC5BpB,EAASE,KAAK6K,SAAS,GACvB,aAENjL,EAASkL,YAAW,QAAS,CAAEqD,OAAQD,MAEzCtO,EAASF,aAAe,IAhBnB,2CAAP,wDCgCaiL,EAvED,SAAC,GAAwC,IAAtCR,EAAqC,EAArCA,QAASiD,EAA4B,EAA5BA,WAAYa,EAAgB,EAAhBA,UAMlC,OAAI9D,EAAgB,cAAC,IAAD,CAAUM,GAAG,aAG7B,sBAAKtG,UAAU,QAAf,UACI,yCACA,cAAC0J,GAAD,CAAgBT,WAAYA,EAAY3F,SAV7B,SAACoC,GAChB,IAAMlN,EAAuCkN,EAAvClN,MAAOC,EAAgCiN,EAAhCjN,SAAUC,EAAsBgN,EAAtBhN,SAAUC,EAAY+M,EAAZ/M,QACjCmR,EAAUtR,EAAOC,EAAUC,EAAUC,YCHvCsR,GAAkB1D,IAAM2D,MAAK,kBAAM,iCAwB1BC,GAtBC,WACZ,OACI,qBAAKnK,UAAU,UAAf,SACI,cAAC,WAAD,CAAUoK,SAAU,cAAC,KAAD,IAApB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,GAAGC,QAAS,cAAC,IAAD,CAAUhE,GAAG,eACrC,eAAC,IAAD,CAAO+D,KAAK,WAAZ,UACI,cAAC,IAAD,CAAOA,KAAK,GAAGC,QAAS,cAAC,GAAD,MACxB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,GAAD,CAAkBvD,KAAMwD,YAAS,0BAEpE,cAAC,IAAD,CAAOF,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,GAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,GAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAACL,GAAD,MAC/B,cAAC,IAAD,CAAOI,KAAK,IAAIC,QAAS,0D,oBCI9BE,GAvBC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACTC,EAAQ,CAAEC,WAAQC,gBAAaC,cAAWC,iBAAcC,oBAExDC,EAAMP,EAAQlO,KAAI,SAACC,GACrB,OACI,oBAAkBwD,UAAWC,KAAMzD,KAAnC,SACI,eAAC,IAAD,CAAS8J,GAAE,WAAM9J,EAAK8J,IAAtB,UACI,cAAC,IAAD,CAAiBtG,UAAWC,KAAM4C,KAAMA,KAAM6H,EAAMlO,EAAKqG,QACxDrG,EAAKgE,SAHLhE,EAAKtC,OAStB,OACI,qBAAK8F,UAAU,UAAf,SACI,oBAAIA,UAAWC,KAAMgL,KAArB,SACKD,OCbFE,GAFU1E,aANH,SAACnK,GACnB,MAAO,CACHoO,QAASpO,EAAM8O,QAAQV,WAImB,GAAzBjE,CAA6BgE,ICPhDY,GAA0B,0BAC1BC,GAAmB,mBAErBzN,GAAe,CACjB0N,aAAa,EACbC,MAAO,SA2BIC,GAAiB,SAACD,GAC7B,MAAO,CAAEnQ,KAAMiQ,GAAkBE,UAGpBE,GA5BE,WAAmC,IAAlCpP,EAAiC,uDAAzBuB,GAActB,EAAW,uCACjD,OAAQA,EAAOlB,MACb,KAAKgQ,GACH,OAAO,2BAAK/O,GAAZ,IAAmBiP,aAAa,IAClC,KAAKD,GACH,OAAO,2BAAKhP,GAAZ,IAAmBkP,MAAOjP,EAAOiP,QACnC,QACE,OAAOlP,I,oBCjBE,OAA0B,iC,oBCsC1BqP,GA/BM,SAAC,GAAiD,IAG/DC,EAHgBlL,EAA8C,EAA9CA,MAAOmL,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,SAA4B,IAAlBnL,aAAkB,MAAV,IAAU,EAElE,EAAgCjB,oBAAS,GAAzC,mBAAOqM,EAAP,KAAiBC,EAAjB,KASM/I,EAAOuD,IAAMyF,SAASzP,IAAIsP,GAAU,SAAAI,GAAK,OAC3C1F,IAAM2F,aAAaD,EAAO,CAAEhM,MAAM,eAAMgM,EAAM7K,MAAMnB,YAGxD,OACI,sBAAKD,UAAW8D,KAAG7D,KAAM0C,QAAP,eAAmB1C,KAAMkM,KAAOL,IAAaM,aAXlD,WACbC,aAAaV,GACbI,GAAY,IAS2EO,aAPzE,kBAAMX,EAAQY,YAAW,kBAAMR,GAAY,KAAQrL,IAOjE,UACKkL,EACK,cAAC,IAAD,CAAS5L,UAAWC,KAAMQ,MAAO6F,GAAIsF,EAArC,SAAiDnL,IACjD,sBAAMT,UAAWC,KAAMQ,MAAvB,SAA+BA,IAErC,cAAC,IAAD,CAAiBoC,KAAM2J,IAAexM,UAAWC,KAAMwM,UACvD,qBAAKzM,UAAW8D,KAAG7D,KAAMyM,KAAP,eAAgBzM,KAAMkM,KAAOL,IAA/C,SACI,oBAAI9L,UAAWC,KAAM+C,KAArB,SACKA,U,qBClBN2J,GAVG,SAAC,GAA+B,IAA7BnM,EAA4B,EAA5BA,KAAMlE,EAAsB,EAAtBA,OAAQsQ,EAAc,EAAdA,QAE/B,OACI,sBAAK5M,UAAWC,KAAM0C,QAAtB,UACI,uBAAOkK,eAAgBD,EAASxR,KAAK,WAAWlB,GAAIsG,EAAMA,KAAMA,EAAMJ,SAAU9D,IAChF,uBAAOsN,QAASpJ,QCwDbsM,GAtDA,SAAC,GAA0E,IAAxE9G,EAAuE,EAAvEA,QAASzN,EAA8D,EAA9DA,MAAOwU,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,WAAYzB,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,eAEhE,EAAsC/L,mBAAS8L,GAA/C,mBAAK0B,EAAL,KAAmBC,EAAnB,KAQA,OANAA,EAAkB,WAEd1B,EADAyB,EAAyB,UAAV1B,EAAoB,OAAS,SAE5C4B,aAAaC,QAAQ,QAASH,IAI9B,iCACI,qBAAKjN,UAAU,YAAf,SACI,sBAAKA,UAAWC,KAAM0C,QAAtB,UACI,qBAAK3C,UAAWC,KAAMoN,KAAtB,SACI,cAAC,IAAD,CAAS/G,GAAI,IAAb,SACI,qBACIrB,IAAKoI,GACLjI,IAAI,OACJpF,UAAU,YAItB,sBAAKA,UAAWC,KAAMuF,KAAtB,UACI,mBAAGxF,UAAWC,KAAMQ,MAApB,6BACA,mBAAGT,UAAWC,KAAMqN,SAApB,iDAEJ,qBAAKtN,UAAWC,KAAMgG,KAAtB,SACKD,EACK,sBAAKhG,UAAWC,KAAMsN,QAAtB,UACE,cAAC,IAAD,CAASvN,UAAWC,KAAMrG,YAAa0M,GAAG,WAA1C,SACI,qBAAKtG,UAAWC,KAAM+E,OAAtB,SACI,qBAAKC,IAAK8H,GAAgC5H,IAAYC,IAAI,SAASpF,UAAU,YAGrF,eAAC,GAAD,CAAcS,MAAOlI,EAAOqT,UAAU,WAAtC,UACI,cAAC,IAAD,CAAStF,GAAG,WAAZ,wBACA,sBAAKtG,UAAWC,KAAMuN,YAAtB,UACI,cAAC,IAAD,CAAiB3K,KAAM4K,MACvB,cAAC,GAAD,CAAWjN,KAAK,cAAclE,OAAQ4Q,EAAiBN,QAA0B,SAAjBK,IAChE,cAAC,IAAD,CAAiBpK,KAAM6K,SAE3B,wBAAQ9M,QAASoM,EAAjB,0BAGN,cAAC,IAAD,CAAShN,UAAU,WAAWsG,GAAG,SAAjC,6BCzCxBqH,GAAkBnH,aATF,SAACnK,GACnB,MAAO,CACH2J,QAAS3J,EAAM4J,KAAKD,QACpBzN,MAAO8D,EAAM4J,KAAK1N,MAClBgT,MAAOlP,EAAMuR,IAAIrC,MACjBwB,cAAe1Q,EAAM4J,KAAKjB,UAIe,CAAEgI,WVsDzB,WACxB,8CAAO,WAAOvR,GAAP,SAAAC,EAAA,sEACgBtD,IAAQS,SADxB,OAE4B,IAF5B,OAEQgD,KAAKK,aAChBT,EAASyN,GAAgB,KAAM,KAAM,MAAM,IAC3CzN,EAAS0N,GAAiB,QAJvB,2CAAP,uDUvD6DqC,mBAAvChF,CAAyDsG,IAElEa,M,mBCdFE,GAAY,CACvBnB,KAAM,YACNoB,UAAW,OACXC,iBAAkB,UAClBC,YAAa,WAGFC,GAAa,CACxBvB,KAAM,OACNoB,UAAW,OACXC,iBAAkB,OAClBC,YAAa,QAGFE,GAAeC,aAAH,6TAEP,SAAC/M,GAAD,OAAWA,EAAMmK,MAAMmB,QAC5B,SAACtL,GAAD,OAAWA,EAAMmK,MAAMuC,aAIQ,SAAC1M,GAAD,OACtCA,EAAMmK,MAAMwC,oBAIO,SAAC3M,GAAD,OAAWA,EAAMmK,MAAMyC,eCkBjCxH,gBALS,SAACnK,GAAD,MAAY,CAChCiP,YAAajP,EAAMuR,IAAItC,YACvBC,MAAOlP,EAAMuR,IAAIrC,SAGmB,CAAE6C,ePrBZ,WAC5B,OAAO,SAAC3S,GACN,IAAI4S,EAAc5S,EAASpD,MAC3BiW,QAAQC,IAAI,CAACF,IAAchF,MAAK,WAC9B5N,EAPG,CAAEL,KAAMgQ,UOwByCI,mBAA3ChF,EAlCH,SAAC,GAA4D,IAA1D8E,EAAyD,EAAzDA,YAAa8C,EAA4C,EAA5CA,eAAgB7C,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,eAI/C,OAHA1L,qBAAU,kBAAMsO,MAAkB,CAAC9C,EAAa8C,IAChDtO,qBAAU,WAAQqN,aAAaqB,QAAQ,UAAYhD,EAAe2B,aAAaqB,QAAQ,YAAa,CAAChD,IAGjG,cAAC,IAAD,UACI,eAAC,KAAD,CAAeD,MAAiB,UAAVA,EAAoB0C,GAAaJ,GAAvD,UACI,cAACK,GAAD,IACE5C,EAEI,sBAAKtL,UAAU,cAAf,UACE,cAAC,GAAD,IACA,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,cAAC,GAAD,MAEJ,qBAAKA,UAAU,kBAAf,SACI,cAAC,GAAD,cATd,cAAC,KAAD,Y,UCrBlByO,GAAc,CACdtH,QAAS,CACL,CACEjN,GAAI,EACJsG,KAAM,QACNwE,OACE,6FACF5L,OAAQ,UAEV,CACEc,GAAI,EACJsG,KAAM,QACNwE,OACE,kJACF5L,OAAQ,WAEV,CACEc,GAAI,EACJsG,KAAM,SACNwE,OACE,+DACF5L,OAAQ,UAEV,CACEc,GAAI,EACJsG,KAAM,QACNwE,OACE,uGACF5L,OAAQ,WAEV,CACEc,GAAI,EACJsG,KAAM,OACNwE,OACE,qEACF5L,OAAQ,WAEV,CACEc,GAAI,EACJsG,KAAM,UACNwE,OACE,6EACF5L,OAAQ,UAEV,CACEc,GAAI,EACJsG,KAAM,OACNwE,OAAQ,mDACR5L,OAAQ,UAEV,CACEc,GAAI,EACJsG,KAAM,QACNwE,OAAQ,6DACR5L,OAAQ,aASHsV,GAJQ,WAAkC,IAAjCrS,EAAgC,uDAAxBoS,GAC5B,OAAOpS,GC5DPuB,GAAe,GAMJ+Q,GAJM,WAAmC,IAAlCtS,EAAiC,uDAAzBuB,GAC1B,OAAOvB,GCHPuB,GAAe,CACjB6M,QAAS,CACP,CAAEvQ,GAAI,EAAGsG,KAAM,6CAAW8F,GAAI,UAAWzD,KAAM,UAC/C,CAAE3I,GAAI,EAAGsG,KAAM,uCAAU8F,GAAI,UAAWzD,KAAM,eAC9C,CAAE3I,GAAI,EAAGsG,KAAM,yDAAa8F,GAAI,UAAWzD,KAAM,aACjD,CAAE3I,GAAI,EAAGsG,KAAM,uCAAU8F,GAAI,QAASzD,KAAM,gBAC5C,CAAE3I,GAAI,EAAGsG,KAAM,2BAAQ8F,GAAI,SAAUzD,KAAM,oBAQhC+L,GAJQ,WAAmC,IAAlCvS,EAAiC,uDAAzBuB,GAC9B,OAAOvB,G,UCCLwS,GAAWC,aAAgB,CAC7BlB,IAAKnC,GACLxF,KAAMwD,GACN0B,QAASyD,GACT/H,YAAa3H,EACbmI,YAAaqH,GACbjG,YAAajB,GACbqB,UAAW8F,GACX7H,WAAY1K,IACZ+G,KAAM4L,OAKJC,GAFmBC,aAAgBC,KAAhBD,CAAiCE,KAE5CC,CAAiBP,GAAUhK,OAAOwK,8BAAgCxK,OAAOwK,gCAIrFxK,OAAOmK,MAAQA,GAEAA,UCzBfM,IAASC,OACP,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFQ,SAASC,eAAe,U,mBCV1BnV,EAAOC,QAAU,CAAC,IAAM,qBAAqB,OAAS,wBAAwB,YAAc,6BAA6B,KAAO,sBAAsB,KAAO,sBAAsB,YAAc,6BAA6B,KAAO,sBAAsB,OAAS,0B,mBCApQD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,KAAO,2BAA2B,KAAO,2BAA2B,KAAO,2BAA2B,QAAU,gC,mBCA1KD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,QAAU,8BAA8B,KAAO,6B,mBCAzGD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,sBAAsB,OAAS,wBAAwB,KAAO,sBAAsB,KAAO,sBAAsB,OAAS,0B,mBCAhLD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,qBAAqB,SAAW,wBAAwB,OAAS,wB,2DCDvG,MAA0B,sC,OCY1BmV,IARG,WACd,OACI,qBAAK1P,UAAWC,IAAM0P,UAAtB,SACI,qBAAK1K,IAAK0K,EAAWvK,IAAI,gB,gCCPtB,QAA0B,kC,mBCCzC9K,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,wB,mBCAtDD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,6B,mBCAzED,EAAOC,QAAU,CAAC,KAAO,8B","file":"static/js/main.b6693429.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  withCredentials: true,\r\n  headers: {\r\n    \"API-KEY\": \"27aa21b5-ca91-4e62-9035-1580402f81c5\",\r\n  },\r\n});\r\n\r\nexport const AuthAPI = {\r\n  checkAuth() {\r\n    return instance.get(\"auth/me\");\r\n  },\r\n  login(email, password, remember, captcha = true) {\r\n    return instance.post(\"auth/login\", { email, password, remember, captcha });\r\n  },\r\n  logout() {\r\n    return instance.delete(\"auth/login\");\r\n  },\r\n};\r\n\r\nexport const ProfileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/${userId}`);\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, { status: status });\r\n  },\r\n  uploadPhoto(photo) {\r\n    let uploadData = new FormData();\r\n    uploadData.append(\"image\", photo);\r\n    return instance.put(`profile/photo`, uploadData);\r\n  },\r\n  setProfileInfo(profileInfo) {\r\n    return instance.put(`/profile`, profileInfo);\r\n  },\r\n};\r\n\r\nexport const UsersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`);\r\n  },\r\n  setFollow(id) {\r\n    return instance.post(`follow/${id}`);\r\n  },\r\n  setUnfollow(id) {\r\n    return instance.delete(`follow/${id}`);\r\n  },\r\n};\r\n\r\nexport const SecurityAPI = {\r\n  getCaptchaUrl() {\r\n    return instance.get(`security/get-captcha-url`);\r\n  },\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__38FFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"toggleBtn_wrapper__3r4mz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"message_message__3A-NI\",\"dialogs\":\"message_dialogs__jI6Zg\",\"dialog\":\"message_dialog__3cK6a\",\"avatar\":\"message_avatar__3tjv_\",\"content\":\"message_content__1WLAe\",\"message_wrap\":\"message_message_wrap__1aisr\",\"newMessage_wrap\":\"message_newMessage_wrap__2Ovi4\",\"newTextField\":\"message_newTextField__PCUjW\",\"addMessage\":\"message_addMessage__36Oa5\",\"message_in\":\"message_message_in__29PJ3\",\"message_out\":\"message_message_out__K6gKk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"profile-posts_addPost__2m9uT\",\"add\":\"profile-posts_add__1_MLD\",\"wrapper\":\"profile-posts_wrapper__3S_ny\",\"post\":\"profile-posts_post__1n7m3\",\"post_text\":\"profile-posts_post_text__3fFpy\",\"likes\":\"profile-posts_likes__1PZQp\",\"like\":\"profile-posts_like__2Sxys\",\"likeIcon\":\"profile-posts_likeIcon__2MxvQ\",\"likeBtn\":\"profile-posts_likeBtn__CizgX\",\"active\":\"profile-posts_active__3e2Gj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"header_wrapper__20D7E\",\"logo\":\"header_logo__2UEgb\",\"info\":\"header_info__1Bke8\",\"title\":\"header_title__34yOX\",\"subtitle\":\"header_subtitle__1IBzu\",\"auth\":\"header_auth__1wNO6\",\"profile\":\"header_profile__1DW_Q\",\"avatar\":\"header_avatar__1QB5A\",\"loginName\":\"header_loginName__1DRrR\",\"logoutBtn\":\"header_logoutBtn__3fYwe\",\"themeToggle\":\"header_themeToggle__2QYtH\"};","import { UsersAPI } from \"../api/api\";\r\n\r\nconst SET_USERS = \"SET-USERS\";\r\nconst TOGGLE_FOLLOW = \"TOGGLE-FOLLOW\";\r\nconst SET_PAGE = \"SET-PAGE\";\r\nconst FETCHING_TOGGLE = \"FETCHING-TOGGLE\";\r\nconst FOLLOWING_TOGGLE = \"FOLLOWING-TOGGLE\";\r\nconst SHOW_MORE_USERS = \"SHOW-MORE-USERS\";\r\n\r\nlet intinalState = {\r\n  currentPeople: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  isFollowingProgress: [],\r\n};\r\n\r\nlet peopleReducer = (state = intinalState, action) => {\r\n  switch (action.type) {\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        currentPeople: [...action.users],\r\n        totalUsersCount: action.totalUsersCount,\r\n      };\r\n    case SHOW_MORE_USERS:\r\n      return {\r\n        ...state,\r\n        currentPeople: [...state.currentPeople, ...action.users],\r\n        totalUsersCount: action.totalUsersCount,\r\n      };\r\n    case FETCHING_TOGGLE:\r\n      return { ...state, isFetching: action.isFetching };\r\n    case TOGGLE_FOLLOW:\r\n      return {\r\n        ...state,\r\n        currentPeople: state.currentPeople.map((item) => {\r\n          if (item.id === action.userId)\r\n            return { ...item, followed: !item.followed };\r\n          else return item;\r\n        }),\r\n      };\r\n    case FOLLOWING_TOGGLE:\r\n      return {\r\n        ...state,\r\n        isFollowingProgress: action.isFollowingProgress\r\n          ? [...state.isFollowingProgress, action.userId]\r\n          : state.isFollowingProgress.filter((id) => id !== action.userId),\r\n      };\r\n    case SET_PAGE:\r\n      return { ...state, currentPage: action.currentPage };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setUsers = (users, totalUsersCount) => {\r\n  return { type: SET_USERS, users, totalUsersCount };\r\n};\r\n\r\nexport const setMoreUsers = (users, totalUsersCount) => {\r\n  return { type: SHOW_MORE_USERS, users, totalUsersCount };\r\n};\r\n\r\nexport const toggleFollow = (userId) => {\r\n  return { type: TOGGLE_FOLLOW, userId };\r\n};\r\n\r\nexport const setPage = (count) => {\r\n  return { type: SET_PAGE, currentPage: count };\r\n};\r\n\r\nexport const toggleFetching = (isFetching) => {\r\n  return { type: FETCHING_TOGGLE, isFetching };\r\n};\r\n\r\nexport const toggleFollowingProgress = (isFollowingProgress, userId) => {\r\n  return { type: FOLLOWING_TOGGLE, isFollowingProgress, userId };\r\n};\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleFetching(true));\r\n    let response = await UsersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(setUsers(response.data.items, response.data.totalCount));\r\n    dispatch(toggleFetching(false));\r\n  };\r\n};\r\n\r\nexport const getMoreUsers = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleFetching(true));\r\n    let response = await UsersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(setMoreUsers(response.data.items, response.data.totalCount));\r\n    dispatch(toggleFetching(false));\r\n  };\r\n};\r\n\r\nexport const following = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, id));\r\n    let response = await UsersAPI.setFollow(id);\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(toggleFollow(id));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, id));\r\n  };\r\n};\r\n\r\nexport const unFollowing = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, id));\r\n    let response = await UsersAPI.setUnfollow(id);\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(toggleFollow(id));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, id));\r\n  };\r\n};\r\n\r\nexport default peopleReducer;\r\n","export const parseErrorsText = (errors) => {\r\n  let errorsObj = {};\r\n  for (let i = 0; i < errors.length; i++) {\r\n    let fieldName = errors[i]\r\n      .slice(\r\n        errors[i].indexOf(\"(\") + 1,\r\n        errors[i].indexOf(\"-\") // сделать фикс, если односложное имя поля\r\n      )\r\n      .toLowerCase();\r\n    let fieldSubName = errors[i]\r\n      .slice(errors[i].indexOf(\">\") + 1, errors[i].indexOf(\")\"))\r\n      .toLowerCase();\r\n    let errorText = errors[i].slice(0, errors[i].indexOf(\"(\") - 1);\r\n    errorsObj[fieldName] = {\r\n      ...errorsObj[fieldName],\r\n      [fieldSubName]: errorText,\r\n    };\r\n  }\r\n  return errorsObj;\r\n};","import { stopSubmit } from \"redux-form\";\r\nimport { ProfileAPI } from \"../api/api\";\r\nimport { parseErrorsText } from \"../tools/parse\";\r\nimport { toggleFetching } from \"./people-reducer\";\r\n\r\nconst SET_PROFILE_ID = \"SET-PROFILE-ID\";\r\nconst SET_USER = \"SET-USER\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_PHOTO = \"SET-PHOTO\";\r\nconst LIKE_TOGGLE = \"LIKE-TOGGLE\";\r\n\r\nlet initialState = {\r\n  profileId: \"\",\r\n  status: \"\",\r\n  userData: {\r\n    userId: \"\",\r\n    fullName: \"\",\r\n    aboutMe: \"\",\r\n    photos: {},\r\n    contacts: {\r\n      facebook: null,\r\n      website: null,\r\n      vk: null,\r\n      twitter: null,\r\n      instagram: null,\r\n      youtube: null,\r\n      github: null,\r\n      mainLink: null,\r\n    },\r\n  },\r\n  posts: [\r\n    {\r\n      id: 1,\r\n      text: \"Hello\",\r\n      likeCount: 12,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Yeah, i'm superman\",\r\n      likeCount: 47,\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"No, no, no..it's no good\",\r\n      likeCount: 0,\r\n    },\r\n    {\r\n      id: 4,\r\n      text: \"This is my last post... Goodbay everyone\",\r\n      likeCount: 8,\r\n    },\r\n  ],\r\n  userLikesPostsId: [],\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PROFILE_ID:\r\n      return { ...state, profileId: action.profileId };\r\n    case SET_USER:\r\n      return { ...state, userData: action.profileData };\r\n    case SET_STATUS:\r\n      return { ...state, status: action.status };\r\n    case ADD_POST:\r\n      if (action.newPostText) {\r\n        return {\r\n          ...state,\r\n          posts: [\r\n            ...state.posts,\r\n            {\r\n              id: state.posts.length + 1,\r\n              text: action.newPostText,\r\n              likeCount: 0,\r\n            },\r\n          ],\r\n        };\r\n      } else return state;\r\n    case LIKE_TOGGLE:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((item) => {\r\n          if (item.id === action.postId) {\r\n            if (state.userLikesPostsId.includes(action.postId)) {\r\n              item.likeCount -= 1;\r\n              state.userLikesPostsId.splice(\r\n                state.userLikesPostsId.indexOf(action.postId),\r\n                1\r\n              );\r\n            } else {\r\n              item.likeCount += 1;\r\n              state.userLikesPostsId.push(action.postId);\r\n            }\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n    case SET_PHOTO:\r\n      return {\r\n        ...state,\r\n        userData: { ...state.userData, photos: action.photos },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setProfileId = (profileId) => {\r\n  return { type: SET_PROFILE_ID, profileId };\r\n};\r\n\r\nexport const setUser = (profileData) => {\r\n  return { type: SET_USER, profileData };\r\n};\r\n\r\nexport const setStatus = (status) => {\r\n  return { type: SET_STATUS, status };\r\n};\r\n\r\nexport const addPost = (newPostText) => {\r\n  return { type: ADD_POST, newPostText };\r\n};\r\n\r\nexport const uploadProfilePhotoSuccsess = (photos) => {\r\n  return { type: SET_PHOTO, photos };\r\n};\r\n\r\nexport const likeToggle = (postId) => {\r\n  return { type: LIKE_TOGGLE, postId };\r\n};\r\n\r\nexport const getUserId = (userId) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleFetching(true));\r\n    let response = await ProfileAPI.getProfile(userId);\r\n    dispatch(setUser(response.data));\r\n    dispatch(toggleFetching(false));\r\n  };\r\n};\r\n\r\nexport const getStatus = (userId) => {\r\n  return async (dispatch) => {\r\n    let response = await ProfileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n  };\r\n};\r\n\r\nexport const updateStatus = (status) => {\r\n  return async (dispatch) => {\r\n    let response = await ProfileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setStatus(status));\r\n    }\r\n  };\r\n};\r\n\r\nexport const uploadProfilePhoto = (photo) => {\r\n  return async (dispatch) => {\r\n    let response = await ProfileAPI.uploadPhoto(photo);\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(uploadProfilePhotoSuccsess(response.data.data.photos));\r\n    }\r\n  };\r\n};\r\n\r\nexport const changeProfileInfo = (profileInfo) => {\r\n  return async (dispatch) => {\r\n    let response = await ProfileAPI.setProfileInfo(profileInfo);\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(getUserId(profileInfo.userId));\r\n    } else {\r\n      let errors = parseErrorsText(response.data.messages);\r\n      dispatch(stopSubmit(\"profileInfoForm\", errors));\r\n      // return Promise.reject(errors);\r\n    }\r\n  };\r\n};\r\n\r\nexport default profileReducer;\r\n","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport style from \"../profile.module.scss\"\r\nimport { Tooltip } from 'react-tippy';\r\nimport 'react-tippy/dist/tippy.css'\r\n\r\nconst ProfileStatus = ({ status, updateStatus }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [statusText, setStatusText] = useState(status)\r\n\r\n    useEffect(() => {\r\n        setStatusText(status)\r\n    }, [status])\r\n\r\n    const toggleeEditMode = () => {\r\n        setEditMode(!editMode)\r\n        if (status !== statusText) updateStatus(statusText)\r\n    }\r\n\r\n    const changeStatusText = (event) => {\r\n        setStatusText(event.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={style.status}>\r\n            {editMode\r\n                ? <input onBlur={toggleeEditMode}\r\n                    autoFocus={true}\r\n                    onChange={changeStatusText}\r\n                    value={statusText}\r\n                    type=\"text\" name=\"status\" id=\"profileStatus\" />\r\n                : <Tooltip title=\"click for change status\" delay=\"400\" animation=\"fade\">\r\n                    <p onClick={toggleeEditMode}>\r\n                        {status ? status : \"press click for change your status...\"}\r\n                    </p>\r\n                </Tooltip>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","export const required = (value) => {\r\n  if (!value) return \"Field is required\";\r\n  else return undefined;\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n  return (value) => {\r\n    if (value && value.length > maxLength)\r\n      return `Max length is ${maxLength} symbols`;\r\n    else return undefined;\r\n  };\r\n};","import React from 'react';\r\nimport style from './formControl.module.css'\r\n\r\nconst FormControl = (Type) => {\r\n    return ({ input, meta, ...props }) => {\r\n        const hasError = meta.touched && meta.error\r\n\r\n        return (\r\n            <div className={style.formControl + \" \" + (hasError ? style.error : undefined)}>\r\n                {hasError ? <p>{meta.error}</p> : undefined}\r\n                <Type {...input} {...props} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const TextArea =  FormControl(\"textarea\")\r\nexport const Input =  FormControl(\"input\")\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { maxLengthCreator } from '../../../tools/validators';\r\nimport { Input } from '../formControl/formControl';\r\nimport style from './renderFields.module.scss'\r\n\r\nconst maxLength20 = maxLengthCreator(30)\r\n\r\nconst renderFields = (obj, typeField, fieldNamePrefix = null) => {\r\n    switch (typeField) {\r\n        case \"text\": {\r\n            return Object.entries(obj).map(([key, value]) => {\r\n                if (typeof value !== 'object' && value !== \"\") {\r\n                    let valueField = value\r\n                    if (typeof valueField === \"boolean\") {\r\n                        valueField = valueField === true ? \"yes\" : \"no\"\r\n                    }\r\n                    return <li key={key} className={style.item}>\r\n                        <b>{key}:</b>\r\n                        <span>{valueField}</span>\r\n                    </li>\r\n                }\r\n                else return null\r\n            })\r\n        }\r\n        case \"input\": {\r\n            return Object.entries(obj).map(([key, value]) => {\r\n                if (typeof value !== 'object' | value === null) {\r\n                    return <li key={key} className={style.item}><b>{key}:</b>\r\n                        <Field\r\n                            component={Input}\r\n                            type={typeof value === \"boolean\" ? \"checkbox\" : \"text\"}\r\n                            name={fieldNamePrefix ? fieldNamePrefix + '.' + key : key}\r\n                            value={value}\r\n                            validate={maxLength20}\r\n                        />\r\n                    </li>\r\n                } else return null\r\n            })\r\n        }\r\n        default: return null\r\n    }\r\n}\r\n\r\nexport default renderFields","import React from \"react\";\r\nimport style from './profile-info.module.scss'\r\nimport { reduxForm } from \"redux-form\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPenToSquare, faFloppyDisk } from \"@fortawesome/free-solid-svg-icons\";\r\nimport renderFields from \"../../../common/formFields/renderFields\";\r\n\r\nexport const ProfileInfo = ({ userData, isUserProfile, toggleEditMode }) => {\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className=\"title_wrap\">\r\n                <span>Info</span>\r\n                {isUserProfile &&\r\n                    <button className={style.editBtn} onClick={toggleEditMode}>\r\n                        <span>edit</span>\r\n                        <FontAwesomeIcon icon={faPenToSquare} size={\"lg\"} />\r\n                    </button>\r\n                }\r\n            </div>\r\n            <ul className={style.list}>\r\n                {renderFields(userData, \"text\")}\r\n            </ul>\r\n            <div className=\"title_wrap\">\r\n                <span>Contacts</span>\r\n            </div>\r\n            <ul className={style.list}>\r\n                {renderFields(userData.contacts, \"text\", \"contacts\")}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileInfoEdit = ({ initialValues, handleSubmit, error }) => {\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"title_wrap\">\r\n                    <span>Info</span>\r\n                    <button className={style.editBtn}>\r\n                        <span>save</span>\r\n                        <FontAwesomeIcon icon={faFloppyDisk} size={\"lg\"} />\r\n                    </button>\r\n                </div>\r\n                {/* {error && <p className=\"formSummaryError\">{error}</p>} */}\r\n                <ul className={style.list}>\r\n                    {renderFields(initialValues, \"input\")}\r\n                    <div className=\"title_wrap\">\r\n                        <span>Contacts</span>\r\n                    </div>\r\n                    {renderFields(initialValues.contacts, \"input\", \"contacts\")}\r\n                </ul>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const ProfileInfoForm = reduxForm({ form: \"profileInfoForm\" })(ProfileInfoEdit)","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../../tools/validators';\r\nimport { TextArea } from '../../../common/formControl/formControl';\r\nimport style from './profile-posts.module.scss'\r\nimport cn from 'classnames'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst ProfilePosts = ({ posts, handleSubmit, isUserProfile, userLikesPostsId, likeToggle }) => {\r\n\r\n    let userPosts = posts.map(((item) => {\r\n        return (\r\n            <div key={item.id} className={style.post}>\r\n                <p className={style.post_text}>{item.text}</p>\r\n                <div className={style.likes}>\r\n                    <button className={cn(style.likeBtn, { [style.active]: userLikesPostsId.includes(item.id) })} onClick={() => likeToggle(item.id)}>\r\n                        <FontAwesomeIcon icon={faHeart} size={\"lg\"} className={style.likeIcon} />\r\n                        <span className={style.like}>{item.likeCount}</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }))\r\n\r\n    return (\r\n        <div className={style.posts}>\r\n            {isUserProfile &&\r\n                <form onSubmit={handleSubmit} className={style.addPost}>\r\n                    <Field\r\n                        component={TextArea}\r\n                        name=\"newPostText\"\r\n                        id=\"newPostText\"\r\n                        placeholder=\"Write what your think...\"\r\n                        cols=\"100\"\r\n                        rows=\"3\"\r\n                        validate={[required, maxLength50]}\r\n                    />\r\n                    <button className={style.add}>Add post</button>\r\n                </form>\r\n            }\r\n            <div className={style.wrapper}>\r\n                {userPosts}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfilePostsReduxForm = reduxForm({ form: \"profilePost\" })(ProfilePosts)\r\nexport default ProfilePostsReduxForm","import React, { useEffect, useState } from \"react\";\r\nimport style from './profile.module.scss'\r\nimport userAvatar from \"../../../assets/img/user.png\"\r\nimport { reset } from \"redux-form\";\r\nimport ProfileStatus from \"./profile-status/profile-status\";\r\nimport { ProfileInfo, ProfileInfoForm } from \"./profile-info/profile-info\";\r\nimport { Tooltip } from 'react-tippy';\r\nimport 'react-tippy/dist/tippy.css'\r\nimport ProfilePostsReduxForm from \"./profile-posts/profile-posts\";\r\n\r\nconst Profile = ({ userData, profileId, status, updateStatus, posts, addPost, uploadProfilePhoto, changeProfileInfo, userLikesPostsId, likeToggle }) => {\r\n\r\n    let isUserProfile = userData.userId === profileId\r\n    let initialValuesForm;\r\n    if (isUserProfile) {\r\n        initialValuesForm = { ...userData, contacts: { ...userData.contacts } }\r\n        delete initialValuesForm.userId\r\n        delete initialValuesForm.photos\r\n    }\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    const toggleEditMode = () => setEditMode(!editMode);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n\r\n    const addPostHandle = (formData, dispatch) => {\r\n        addPost(formData.newPostText)\r\n        dispatch(reset(\"profilePost\"))\r\n    }\r\n\r\n    const setProfilePhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            uploadProfilePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const setProfileInfo = (formData) => {\r\n        if (JSON.stringify(formData) !== JSON.stringify(initialValuesForm)) {\r\n            let payload = { userId: userData.userId, ...formData }\r\n            changeProfileInfo(payload)/*.then(\r\n                () => toggleEditMode()       // refact this\r\n            )*/\r\n        } else toggleEditMode()\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className={style.top}>\r\n                <div className={style.avatar}>\r\n                    <img src={userData.photos.large ? userData.photos.large : userAvatar} alt=\"avatar\" className=\"img\" />\r\n\r\n                    {isUserProfile &&\r\n                        <Tooltip title=\"click for change photo\" delay=\"400\" animation=\"fade\">\r\n                            <label className={style.uploadPhoto}>\r\n                                <input type=\"file\" name=\"profilePhoto\" onChange={setProfilePhoto} />\r\n                            </label>\r\n                        </Tooltip>\r\n                    }\r\n\r\n                </div>\r\n                <div className={style.info}>\r\n                    <p className={style.name}>{userData.fullName}</p>\r\n\r\n                    {isUserProfile\r\n                        ? <ProfileStatus status={status} updateStatus={updateStatus} />\r\n                        : <p>{status}</p>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n            <div className={style.bottom}>\r\n\r\n                {editMode\r\n                    ? <ProfileInfoForm initialValues={initialValuesForm} toggleEditMode={toggleEditMode} onSubmit={setProfileInfo} />\r\n                    : <ProfileInfo userData={userData} toggleEditMode={toggleEditMode} isUserProfile={isUserProfile} />\r\n                }\r\n\r\n            </div>\r\n            <ProfilePostsReduxForm posts={posts} onSubmit={addPostHandle}\r\n                isUserProfile={isUserProfile} userLikesPostsId={userLikesPostsId} likeToggle={likeToggle} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isLogin: state.auth.isLogin,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isLogin) return <Navigate to=\"/login\" />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React, { useEffect } from \"react\"\r\nimport { getUserId, getStatus, updateStatus, addPost, uploadProfilePhoto, changeProfileInfo, likeToggle } from \"../../../Redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from './profile'\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n\r\n    let { math, profileId, getUserId, getStatus } = props\r\n\r\n    useEffect(() => {\r\n        let id = math ? math.params.userId : profileId;\r\n        getUserId(id)\r\n        getStatus(id)\r\n    }, [math, profileId, getUserId, getStatus])\r\n\r\n    return (\r\n        props.isFetching ? <Preloader /> : <Profile {...props} />\r\n    )\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profileId: state.profilePage.profileId,\r\n        userData: state.profilePage.userData,\r\n        status: state.profilePage.status,\r\n        posts: state.profilePage.posts,\r\n        userLikesPostsId: state.profilePage.userLikesPostsId,\r\n        isFetching: state.peoplePage.isFetching,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    getUserId, getStatus, updateStatus, addPost, uploadProfilePhoto, changeProfileInfo, likeToggle\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(ProfileContainer)\r\n","import React from \"react\";\r\nimport style from './friends.module.css'\r\n\r\nconst Friends = (props) => {\r\n    let FriendsItem = props.friends.map((item) => {\r\n        return (\r\n            <li key={item.id} className={style.item}>\r\n                <div className={style.avatar}>\r\n                    <img src={item.avatar} alt=\"avatar\" className=\"img\" />\r\n                </div>\r\n                <div className={style.info}>\r\n                    <p className={style.name}>{item.name}</p>\r\n                    <p className={style.status}>{item.status}</p>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n    )\r\n\r\n    return (\r\n        <div className=\"friends\">\r\n            <ul className={style.list}>\r\n                {FriendsItem}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends","import { connect } from \"react-redux\";\r\nimport Friends from './friends'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.friendsPage.friends,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst FriendsContainer = connect(mapStateToProps, mapDispatchToProps)(Friends)\r\n\r\nexport default FriendsContainer","const ADD_MESSAGE = \"ADD-MESSAGE\";\r\n\r\nlet initialState = {\r\n  messages: [\r\n    {\r\n      id: 1,\r\n      sender: \"in\",\r\n      text: \"Hello, bro\",\r\n    },\r\n    {\r\n      id: 2,\r\n      sender: \"out\",\r\n      text: \"Hey\",\r\n    },\r\n    {\r\n      id: 3,\r\n      sender: \"in\",\r\n      text: \"How are you today?\",\r\n    },\r\n    {\r\n      id: 4,\r\n      sender: \"out\",\r\n      text: \"I'm fine, bro, all is good\",\r\n    },\r\n    {\r\n      id: 5,\r\n      sender: \"out\",\r\n      text: \"How are you too?\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE:\r\n      if (action.newMessageText) {\r\n        return {\r\n          ...state,\r\n          messages: [\r\n            ...state.messages,\r\n            {\r\n              id: state.messages.length + 1,\r\n              sender: \"out\",\r\n              text: action.newMessageText,\r\n            },\r\n          ],\r\n        };\r\n      } else return state\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addMessage = (newMessageText) => {\r\n  return { type: ADD_MESSAGE, newMessageText: newMessageText };\r\n};\r\n\r\nexport default messageReducer;\r\n","import React from \"react\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../tools/validators\";\r\nimport { TextArea } from \"../../common/formControl/formControl\";\r\nimport style from './message.module.scss'\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst Message = ({ friends, messages, addMessage }) => {\r\n    let dialogs = friends.map(item => {\r\n        return (\r\n            <div key={item.id} className={style.dialog}>\r\n                <div className={style.avatar}><img src={item.avatar} alt=\"avatar\" className=\"img\" /></div>\r\n                <div className={style.info}>\r\n                    <p className={style.name}>{item.name}</p>\r\n                    <p className={style.last}></p>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    let messagesList = messages.map(item => {\r\n        if (item.sender === 'in') {\r\n            return (\r\n                <div key={item.id} className={style.message_in}>\r\n                    <p className=\"message_text\">{item.text}</p>\r\n                </div>\r\n            )\r\n        } else if (item.sender === 'out') {\r\n            return (\r\n                <div key={item.id} className={style.message_out}>\r\n                    <p className=\"message_text\">{item.text}</p>\r\n                </div>\r\n            )\r\n        } else return undefined\r\n    })\r\n\r\n    const addMessageHandle = (formData, dispatch) => {\r\n        addMessage(formData.newMessageText)\r\n        dispatch(reset(\"newMessage\"))\r\n    }\r\n\r\n    return (\r\n        <div className={style.message}>\r\n            <div className={style.dialogs}>\r\n                {dialogs}\r\n            </div>\r\n            <div className={style.content}>\r\n                <div className={style.message_wrap}>\r\n                    {messagesList}\r\n                </div>\r\n                <NewMessageForm onSubmit={addMessageHandle} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst NewMessage = ({ handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={style.newMessage_wrap}>\r\n            <Field\r\n                component={TextArea}\r\n                className={style.newTextField}\r\n                placeholder=\"Write your message...\"\r\n                name=\"newMessageText\"\r\n                rows=\"5\"\r\n                validate={[required, maxLength100]}\r\n            />\r\n            <button className={style.addMessage}>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewMessageForm = reduxForm({ form: \"newMessage\" })(NewMessage)\r\n\r\nexport default Message","import { addMessage } from \"../../../Redux/message-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Message from './message'\r\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.friendsPage.friends,\r\n        messages: state.messagePage.messages,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { addMessage }),\r\n    withAuthRedirect\r\n)(Message)","import React from \"react\";\r\nimport style from './group.module.css'\r\n\r\nconst Group = (props) => {\r\n    return (\r\n        <div>Group</div>\r\n    )\r\n}\r\n\r\nexport default Group","import { connect } from \"react-redux\";\r\nimport Group from './group'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        group: state.groupPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst GroupContainer = connect(mapStateToProps, mapDispatchToProps)(Group)\r\n\r\nexport default GroupContainer","import { stopSubmit } from \"redux-form\";\r\nimport { AuthAPI, ProfileAPI, SecurityAPI } from \"../api/api\";\r\nimport { parseErrorsText } from \"../tools/parse\";\r\nimport { toggleFetching } from \"./people-reducer\";\r\nimport { setProfileId } from \"./profile-reducer\";\r\n\r\nconst SET_AUTH_USER_DATA = \"SET-auth-USER-DATA\";\r\nconst SET_PROFILE_AVATAR = \"SET-PROFILE-AVATAR\";\r\nconst SET_CAPTCHA_URL = \"SET-CAPTCHA-URL\";\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  login: null,\r\n  email: null,\r\n  // name: null,\r\n  avatar: null,\r\n  isLogin: false,\r\n  isFetching: false,\r\n  captcha: null,\r\n  captchaUrl: null,\r\n};\r\n\r\nlet authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH_USER_DATA:\r\n      return { ...state, ...action.data, captcha: null, captchaUrl: null };\r\n    case SET_PROFILE_AVATAR:\r\n      return { ...state, avatar: action.avatar };\r\n    case SET_CAPTCHA_URL:\r\n      return { ...state, captchaUrl: action.captchaUrl };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (userId, login = null, email, isLogin) => {\r\n  return { type: SET_AUTH_USER_DATA, data: { userId, login, email, isLogin } };\r\n};\r\n\r\nexport const setProfileAvatar = (avatar) => {\r\n  return { type: SET_PROFILE_AVATAR, avatar };\r\n};\r\n\r\nexport const setCaptchaUrl = (captchaUrl) => {\r\n  return { type: SET_CAPTCHA_URL, captchaUrl };\r\n};\r\n\r\nexport const loginAuth = (email, password, remember, captcha) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleFetching(true));\r\n    let response = await AuthAPI.login(email, password, remember, captcha);\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(checkAuth());\r\n    } else {\r\n      if (response.data.resultCode === 10) {\r\n        dispatch(getCaptcha());\r\n      }\r\n      let errorMessage =\r\n        response.data.messages.length > 0\r\n          ? response.data.messages[0]\r\n          : \"Some Error\";\r\n      // let errors = parseErrorsText(response.data.messages)   // refact this\r\n      dispatch(stopSubmit(\"login\", { _error: errorMessage }));\r\n    }\r\n    dispatch(toggleFetching(false));\r\n  };\r\n};\r\n\r\nexport const logoutAuth = () => {\r\n  return async (dispatch) => {\r\n    let response = await AuthAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setAuthUserData(null, null, null, false));\r\n      dispatch(setProfileAvatar(null));\r\n    }\r\n  };\r\n};\r\n\r\nexport const checkAuth = () => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleFetching(true));\r\n    let response = await AuthAPI.checkAuth();\r\n    if (response.data.resultCode === 0) {\r\n      let { id, login, email } = response.data.data;\r\n      dispatch(setProfileId(id));\r\n      dispatch(setAuthUserData(id, login, email, true));\r\n      ProfileAPI.getProfile(id).then((response) => {\r\n        dispatch(setProfileAvatar(response.data.photos.small));\r\n      });\r\n    }\r\n    dispatch(toggleFetching(false));\r\n  };\r\n};\r\n\r\nexport const getCaptcha = () => {\r\n  return async (dispatch) => {\r\n    let response = await SecurityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(setCaptchaUrl(captchaUrl));\r\n  };\r\n};\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { loginAuth } from './../../../Redux/auth-reducer'\r\nimport { required } from '../../../tools/validators';\r\nimport { Input } from '../../common/formControl/formControl';\r\nimport style from \"./login.module.css\"\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst Login = ({ isLogin, captchaUrl, loginAuth }) => {\r\n    const loginCheck = (formData) => {\r\n        let { email, password, remember, captcha } = formData\r\n        loginAuth(email, password, remember, captcha)\r\n    }\r\n\r\n    if (isLogin) return <Navigate to=\"/profile\" />\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <span>Login</span>\r\n            <LoginReduxForm captchaUrl={captchaUrl} onSubmit={loginCheck} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginForm = ({ handleSubmit, captchaUrl, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={style.form}>\r\n            <Field\r\n                component={Input}\r\n                className={style.input}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder='your email'\r\n                validate={[required]}\r\n            />\r\n            <Field\r\n                component={Input}\r\n                className={style.input}\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder='your password'\r\n                validate={[required]}\r\n            />\r\n            <label className={style.checkbox} htmlFor=\"remember\">\r\n                <Field\r\n                    component={Input}\r\n                    type=\"checkbox\"\r\n                    name=\"remember\"\r\n                    id='remember'\r\n                />\r\n                remember me\r\n            </label>\r\n            {error && <p className=\"formSummaryError\">{error}</p>}\r\n            {captchaUrl && <div>\r\n                <span>Please, enter anti-bot code</span>\r\n                <img src={captchaUrl} alt=\"captcha\" />\r\n                <Field\r\n                    component={Input}\r\n                    className={style.input}\r\n                    type=\"text\"\r\n                    name=\"captcha\"\r\n                    id='captcha'\r\n                    validate={[required]}\r\n                />\r\n            </div>}\r\n            <button className={style.submit}>Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLogin: state.auth.isLogin,\r\n        captchaUrl: state.auth.captchaUrl,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { loginAuth })(Login) ","import React, { Suspense } from \"react\";\r\nimport { Routes, Route, useMatch, Navigate } from 'react-router-dom';\r\nimport ProfileContainer from \"./Profile/profile-container\";\r\nimport FriendsContainer from \"./Friends/friends-container\";\r\nimport MessageContainer from \"./Message/message-container\";\r\nimport GroupContainer from \"./Group/group-container\";\r\n// import PeopleContainer from \"./People/people-container\";\r\nimport Login from \"./Login/login\";\r\nimport Preloader from \"../common/preloader/preloader\";\r\nconst PeopleContainer = React.lazy(() => import(\"./People/people-container\"));\r\n\r\nconst Content = () => {\r\n    return (\r\n        <div className=\"content\">\r\n            <Suspense fallback={<Preloader />}>\r\n                <Routes>\r\n                    <Route path='' element={<Navigate to='/profile' />} /> \r\n                    <Route path='/profile'>\r\n                        <Route path='' element={<ProfileContainer />} />\r\n                        <Route path=':userId' element={<ProfileContainer math={useMatch(\"profile/:userId\")} />} />\r\n                    </Route>\r\n                    <Route path='/login' element={<Login />} />\r\n                    <Route path='/friends' element={<FriendsContainer />} />\r\n                    <Route path='/message' element={<MessageContainer />} />\r\n                    <Route path='/group' element={<GroupContainer />} />\r\n                    <Route path='/people' element={<PeopleContainer />} />\r\n                    <Route path='*' element={<div>404 Not Found</div>} />\r\n                </Routes>\r\n            </Suspense>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './sidebar.module.scss'\r\nimport { faUser, faUserGroup, faMessage, faLayerGroup, faPeopleArrows } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst Sidebar = ({ navData }) => {\r\n    const icons = { faUser, faUserGroup, faMessage, faLayerGroup, faPeopleArrows }\r\n\r\n    const nav = navData.map((item) => {\r\n        return (\r\n            <li key={item.id} className={style.item}>\r\n                <NavLink to={`/${item.to}`}>\r\n                    <FontAwesomeIcon className={style.icon} icon={icons[item.icon]} />\r\n                    {item.name}\r\n                </NavLink>\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <ul className={style.menu}>\r\n                {nav}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import { connect } from 'react-redux'\r\nimport Sidebar from './sidebar'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        navData: state.sidebar.navData\r\n    }\r\n}\r\n\r\nconst SidebarContainer = connect(mapStateToProps, {})(Sidebar)\r\n\r\nexport default SidebarContainer","import { checkAuth } from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED_SUCCESS = \"SET-INITIALIZED-SUCCESS\";\r\nconst TOGGLE_APP_THEME = \"TOGGLE-APP-THEME\";\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n  theme: \"light\",\r\n};\r\n\r\nlet appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_INITIALIZED_SUCCESS:\r\n      return { ...state, initialized: true };\r\n    case TOGGLE_APP_THEME:\r\n      return { ...state, theme: action.theme };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccess = () => {\r\n  return { type: SET_INITIALIZED_SUCCESS };\r\n};\r\n\r\nexport const initializedApp = () => {\r\n  return (dispatch) => {\r\n    let authPromise = dispatch(checkAuth());\r\n    Promise.all([authPromise]).then(() => {\r\n      dispatch(initializedSuccess());\r\n    });\r\n  };\r\n};\r\n\r\nexport const toogleAppTheme = (theme) => {\r\n  return { type: TOGGLE_APP_THEME, theme };\r\n};\r\n\r\nexport default appReducer;\r\n","export default __webpack_public_path__ + \"static/media/logo.b8655a29.jpg\";","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './dropdownMenu.module.css'\r\nimport cn from 'classnames'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst DropdownMenu = ({ title, linkTitle, children, delay = 300 }) => {\r\n\r\n    const [menuShow, setMenuShow] = useState(false)\r\n    let timer;\r\n\r\n    const menuOpen = () => {\r\n        clearTimeout(timer)\r\n        setMenuShow(true)\r\n    }\r\n    const menuClose = () => timer = setTimeout(() => setMenuShow(false), delay)\r\n\r\n    const list = React.Children.map(children, child => (\r\n        React.cloneElement(child, { style: { ...child.props.style } })\r\n    ))\r\n\r\n    return (\r\n        <div className={cn(style.wrapper, { [style.show]: menuShow })} onMouseEnter={menuOpen} onMouseLeave={menuClose}>\r\n            {linkTitle\r\n                ? <NavLink className={style.title} to={linkTitle}>{title}</NavLink>\r\n                : <span className={style.title}>{title}</span>\r\n            }\r\n            <FontAwesomeIcon icon={faChevronDown} className={style.chevron} />\r\n            <div className={cn(style.body, { [style.show]: menuShow })} >\r\n                <ul className={style.list}>\r\n                    {list}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DropdownMenu","import React from 'react';\r\nimport style from './toggleBtn.module.scss'\r\n\r\nconst ToggleBtn = ({ name, action, initial }) => {\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <input defaultChecked={initial} type=\"checkbox\" id={name} name={name} onChange={action} />\r\n            <label htmlFor={name}></label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToggleBtn;","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport style from \"./header.module.scss\";\r\nimport userAvatar from \"../../assets/img/user.png\"\r\nimport logo from \"../../assets/img/logo.jpg\"\r\nimport DropdownMenu from \"../common/dropdownMenu/dropdownMenu\";\r\nimport ToggleBtn from \"../common/buttons/toggleBtn\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst Header = ({ isLogin, login, profileAvatar, logoutAuth, theme, toogleAppTheme }) => {\r\n\r\n    let [currentTheme, setCurrentTheme] = useState(theme)\r\n\r\n    setCurrentTheme = () => {\r\n        currentTheme = theme === \"light\" ? \"dark\" : \"light\"\r\n        toogleAppTheme(currentTheme)\r\n        localStorage.setItem(\"theme\", currentTheme)\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"container\">\r\n                <div className={style.wrapper}>\r\n                    <div className={style.logo}>\r\n                        <NavLink to={'/'}>\r\n                            <img\r\n                                src={logo}\r\n                                alt=\"logo\"\r\n                                className='img'\r\n                            />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={style.info}>\r\n                        <p className={style.title}>Samurai Network</p>\r\n                        <p className={style.subtitle}>for the best of the best samurai</p>\r\n                    </div>\r\n                    <div className={style.auth}>\r\n                        {isLogin\r\n                            ? <div className={style.profile}>\r\n                                <NavLink className={style.profileInfo} to='/profile'>\r\n                                    <div className={style.avatar}>\r\n                                        <img src={profileAvatar ? profileAvatar : userAvatar} alt=\"avatar\" className=\"img\" />\r\n                                    </div>\r\n                                </NavLink>\r\n                                <DropdownMenu title={login} linkTitle='/profile'>\r\n                                    <NavLink to='/profile'>go profile</NavLink>\r\n                                    <div className={style.themeToggle}>\r\n                                        <FontAwesomeIcon icon={faSun} />\r\n                                        <ToggleBtn name='themeToggle' action={setCurrentTheme} initial={currentTheme === 'dark' ? true : false} />\r\n                                        <FontAwesomeIcon icon={faMoon} />\r\n                                    </div>\r\n                                    <button onClick={logoutAuth}>Logout</button>\r\n                                </DropdownMenu>\r\n                            </div>\r\n                            : <NavLink className=\"greenBtn\" to='/login'>Login</NavLink>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header >\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { connect } from 'react-redux';\r\nimport { logoutAuth } from '../../Redux/auth-reducer';\r\nimport { toogleAppTheme } from './../../Redux/app-reducer'\r\nimport Header from './header';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isLogin: state.auth.isLogin,\r\n        login: state.auth.login,\r\n        theme: state.app.theme,\r\n        profileAvatar: state.auth.avatar,\r\n    }\r\n}\r\n\r\nconst HeaderContainer = connect(mapStateToProps, { logoutAuth, toogleAppTheme })(Header)\r\n\r\nexport default HeaderContainer\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const darkTheme = {\r\n  body: \"#000000e0\",\r\n  textColor: \"#fff\",\r\n  titleBeforeColor: \"#1f1f1f\",\r\n  messageText: \"#3a57da\",\r\n};\r\n\r\nexport const lightTheme = {\r\n  body: \"#fff\",\r\n  textColor: \"#000\",\r\n  titleBeforeColor: \"#fff\",\r\n  messageText: \"#fff\",\r\n};\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n   body {\r\n    background: ${(props) => props.theme.body};\r\n    color: ${(props) => props.theme.textColor};\r\n    transition: .3s ease;\r\n   }\r\n   .title_wrap::before {\r\n    border-color: transparent transparent ${(props) =>\r\n      props.theme.titleBeforeColor} transparent;\r\n    transition: .3s ease;\r\n   }\r\n   .message_text {\r\n     background-color: ${(props) => props.theme.messageText};\r\n     transition: .3s ease;\r\n   }\r\n   `;\r\n","import React, { useEffect } from 'react';\r\nimport './css/App.scss';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport Content from './components/Content/content';\r\nimport SidebarContainer from './components/Sidebar/sidebar-container';\r\nimport HeaderContainer from './components/Header/header-container';\r\nimport { connect } from 'react-redux';\r\nimport { initializedApp, toogleAppTheme } from './Redux/app-reducer';\r\nimport Preloader from './components/common/preloader/preloader';\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { darkTheme, lightTheme, GlobalStyles } from \"./components/common/themes/themes\";\r\n\r\nconst App = ({ initialized, initializedApp, theme, toogleAppTheme }) => {\r\n    useEffect(() => initializedApp(), [initialized, initializedApp])\r\n    useEffect(() => { localStorage.getItem(\"theme\") && toogleAppTheme(localStorage.getItem(\"theme\")) }, [toogleAppTheme])\r\n\r\n    return (\r\n        <HashRouter>\r\n            <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n                <GlobalStyles />\r\n                {!initialized\r\n                    ? <Preloader />\r\n                    : <div className=\"app-wrapper\">\r\n                        <HeaderContainer />\r\n                        <div className=\"container\">\r\n                            <div className=\"app-content\">\r\n                                <div className=\"sidebar-wrapper\">\r\n                                    <SidebarContainer />\r\n                                </div>\r\n                                <div className=\"content-wrapper\">\r\n                                    <Content />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </ThemeProvider>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n    theme: state.app.theme,\r\n})\r\n\r\nexport default connect(mapStateToProps, { initializedApp, toogleAppTheme })(App)","let initialSate = {\r\n    friends: [\r\n        {\r\n          id: 1,\r\n          name: \"Diego\",\r\n          avatar:\r\n            \"https://www.ioschattanooga.com/wp-content/uploads/2021/06/Why-do-I-need-a-bone-graft-2.jpg\",\r\n          status: \"Online\",\r\n        },\r\n        {\r\n          id: 2,\r\n          name: \"Macho\",\r\n          avatar:\r\n            \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Outdoors-man-portrait_%28cropped%29.jpg/256px-Outdoors-man-portrait_%28cropped%29.jpg\",\r\n          status: \"Offline\",\r\n        },\r\n        {\r\n          id: 3,\r\n          name: \"George\",\r\n          avatar:\r\n            \"https://10.img.avito.st/avatar/social/256x256/5499302110.jpg\",\r\n          status: \"Online\",\r\n        },\r\n        {\r\n          id: 4,\r\n          name: \"Masha\",\r\n          avatar:\r\n            \"https://avatars.mds.yandex.net/get-pdb/2797093/74e01051-6112-4f3e-8a3c-f19c5275115b/s1200?webp=false\",\r\n          status: \"Offline\",\r\n        },\r\n        {\r\n          id: 5,\r\n          name: \"Olga\",\r\n          avatar:\r\n            \"https://blog.eva.ua/wp-content/uploads/2021/01/4-Osen-1024x768.jpg\",\r\n          status: \"Offline\",\r\n        },\r\n        {\r\n          id: 6,\r\n          name: \"Jessica\",\r\n          avatar:\r\n            \"https://phinemo.com/wp-content/uploads/2017/04/wanita-cantik28-320x200.jpg\",\r\n          status: \"Online\",\r\n        },\r\n        {\r\n          id: 7,\r\n          name: \"Rose\",\r\n          avatar: \"https://i.ytimg.com/vi/ejInryrF5Ns/hqdefault.jpg\",\r\n          status: \"Online\",\r\n        },\r\n        {\r\n          id: 8,\r\n          name: \"Galia\",\r\n          avatar: \"https://volkovysk.by/uploaded/thumbnails/5f087c79f4030.jpg\",\r\n          status: \"Offline\",\r\n        },\r\n      ],\r\n}\r\n\r\nconst friendsReducer = (state = initialSate, action) => {\r\n    return state\r\n}\r\n\r\nexport default friendsReducer","let initialState = {}\r\n\r\nconst groupReducer = (state = initialState, action) => {\r\n    return state\r\n}\r\n\r\nexport default groupReducer","let initialState = {\r\n  navData: [\r\n    { id: 1, name: \"Профиль\", to: \"profile\", icon: \"faUser\" },\r\n    { id: 2, name: \"Друзья\", to: \"friends\", icon: \"faUserGroup\" },\r\n    { id: 3, name: \"Сообщения\", to: \"message\", icon: \"faMessage\" },\r\n    { id: 4, name: \"Группы\", to: \"group\", icon: \"faLayerGroup\" },\r\n    { id: 5, name: \"Люди\", to: \"people\", icon: \"faPeopleArrows\" },\r\n  ],\r\n};\r\n\r\nconst sideBarReducer = (state = initialState, action) => {\r\n  return state;\r\n};\r\n\r\nexport default sideBarReducer;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport friendsReducer from \"./friends-reducer\";\r\nimport groupReducer from \"./group-reducer\";\r\nimport messageReducer from \"./message-reducer\";\r\nimport peopleReducer from \"./people-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sideBarReducer from \"./sidebar-reducer\";\r\nimport { reducer as FormReducere } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n  app: appReducer,\r\n  auth: authReducer,\r\n  sidebar: sideBarReducer,\r\n  profilePage: profileReducer,\r\n  friendsPage: friendsReducer,\r\n  messagePage: messageReducer,\r\n  groupPage: groupReducer,\r\n  peoplePage: peopleReducer,\r\n  form: FormReducere,\r\n});\r\n\r\nlet forReduxDevTools = applyMiddleware(thunkMiddleware)(createStore)\r\n\r\nlet store = forReduxDevTools(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App.jsx\";\nimport store from \"./Redux/redux-store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top\":\"profile_top__1SwBC\",\"avatar\":\"profile_avatar__2YntF\",\"uploadPhoto\":\"profile_uploadPhoto__2smj6\",\"info\":\"profile_info__3xA6g\",\"name\":\"profile_name__2hnRY\",\"description\":\"profile_description__WZ7s0\",\"item\":\"profile_item__2oCKT\",\"status\":\"profile_status__birPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"dropdownMenu_wrapper__m6I81\",\"show\":\"dropdownMenu_show__1jJx0\",\"body\":\"dropdownMenu_body__1w2cq\",\"list\":\"dropdownMenu_list__1QPLZ\",\"chevron\":\"dropdownMenu_chevron__2tlnS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"profile-info_wrapper__Qr-QZ\",\"editBtn\":\"profile-info_editBtn__1HNpS\",\"list\":\"profile-info_list__20tCV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"friends_list__34Ip5\",\"item\":\"friends_item__3buNj\",\"avatar\":\"friends_avatar__V6pCe\",\"info\":\"friends_info__286xV\",\"name\":\"friends_name__3Dwt1\",\"status\":\"friends_status__3BclB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__3DPR4\",\"input\":\"login_input__12TP9\",\"checkbox\":\"login_checkbox__3KsVr\",\"submit\":\"login_submit__3e9-7\"};","export default __webpack_public_path__ + \"static/media/preloader.c0972a6f.svg\";","import React from \"react\";\r\nimport style from \"./preloader.module.css\"\r\nimport preloader from \"../../../assets/img/preloader.svg\"\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={style.preloader}>\r\n            <img src={preloader} alt=\"loading\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","export default __webpack_public_path__ + \"static/media/user.a6143582.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"sidebar_item__1FAAv\",\"icon\":\"sidebar_icon__3CEyE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formControl_formControl__5rs_Z\",\"error\":\"formControl_error__kw1FR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"renderFields_item__Co3pC\"};"],"sourceRoot":""}